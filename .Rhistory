scale_fill_manual(values = c("pink","lightblue"), labels = c("Female", "Male"))
print(sex_fig)
sup1A <- wrap_elements((as.grob(cor_fig)))
sup1B <- wrap_elements((as.grob(sex_fig)))
sup1A / sup1B
sex_fig <- ggboxplot(vg, x = "Sex", y = "log2 Concentration", color = "Sex", facet.by = "Metabolite", fill = "Sex", alpha=0.4) + geom_point(aes(color = vg$Sex)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,step.increase = 0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "right"
) +
scale_color_manual(values = c("pink","lightblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c("pink","lightblue"), labels = c("Female", "Male"))
print(sex_fig)
sup1A <- wrap_elements((as.grob(cor_fig)))
sup1B <- wrap_elements((as.grob(sex_fig)))
sup1A / sup1B
cor_fig
cor_fig
cor_fig <- annotate_figure(p=cor_fig,left = "log2 Concentration")
cor_fig
sup1A <- wrap_elements((as.grob(cor_fig)))
sup1B <- wrap_elements((as.grob(sex_fig)))
sup1A / sup1B
sex_fig <- ggboxplot(vg, x = "Sex", y = "log2 Concentration", color = "Sex", facet.by = "Metabolite", fill = "Sex", alpha=0.4) + geom_point(aes(color = vg$Sex)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,step.increase = 0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("pink","lightblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c("pink","lightblue"), labels = c("Female", "Male"))
print(sex_fig)
sup1A <- wrap_elements((as.grob(cor_fig)))
sup1B <- wrap_elements((as.grob(sex_fig)))
sup1A / sup1B
joined_df <- comp_sex
joined_df <- subset(joined_df, Metabolite%in%mets_int)
vg <- log_df_sex
colnames(vg) <- c("ID","Sex","Metabolite","log2 Concentration")
vg$Sex <- factor(vg$Sex, levels=c("F","M"))
maxim_val <- apply(df_norm_sex[, which(colnames(df_norm_sex)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val - 1
sex_fig <- ggboxplot(vg, x = "Sex", y = "log2 Concentration", color = "Sex", facet.by = "Metabolite", fill = "Sex", alpha=0.4) + geom_point(aes(color = vg$Sex)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,step.increase = 0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("pink","lightblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c("pink","lightblue"), labels = c("Female", "Male"))
print(sex_fig)
sup1A <- wrap_elements((as.grob(cor_fig)))
sup1B <- wrap_elements((as.grob(sex_fig)))
sup1A / sup1B
maxim_val
joined_df$y.position <- maxim_val - 0.1
sex_fig <- ggboxplot(vg, x = "Sex", y = "log2 Concentration", color = "Sex", facet.by = "Metabolite", fill = "Sex", alpha=0.4) + geom_point(aes(color = vg$Sex)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,step.increase = 0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("pink","lightblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c("pink","lightblue"), labels = c("Female", "Male"))
print(sex_fig)
maxim_val - 0.1*maxim_val
joined_df <- comp_sex
joined_df <- subset(joined_df, Metabolite%in%mets_int)
vg <- log_df_sex
colnames(vg) <- c("ID","Sex","Metabolite","log2 Concentration")
vg$Sex <- factor(vg$Sex, levels=c("F","M"))
maxim_val <- apply(df_norm_sex[, which(colnames(df_norm_sex)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val - 0.1*maxim_val
sex_fig <- ggboxplot(vg, x = "Sex", y = "log2 Concentration", color = "Sex", facet.by = "Metabolite", fill = "Sex", alpha=0.4) + geom_point(aes(color = vg$Sex)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,step.increase = 0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("pink","lightblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c("pink","lightblue"), labels = c("Female", "Male"))
print(sex_fig)
sup1A <- wrap_elements((as.grob(cor_fig)))
sup1B <- wrap_elements((as.grob(sex_fig)))
sup1A / sup1B
ggsave(file=here("paper/Figures/S1.png"),plot=sup1A / sup1B, dpi = 1000,bg="white" ,width = 6, height = 16, units = "in")
ggsave(file=here("paper/Figures/S1.png"),plot=sup1A / sup1B, dpi = 1000,bg="white" ,width = 6, height = 12, units = "in")
ggsave(file=here("paper/Figures/S1.png"),plot=sup1A / sup1B, dpi = 1000,bg="white" ,width = 8, height = 12, units = "in")
?stat_pvalue_manual
joined_df <- comp_sex
joined_df <- subset(joined_df, Metabolite%in%mets_int)
vg <- log_df_sex
colnames(vg) <- c("ID","Sex","Metabolite","log2 Concentration")
vg$Sex <- factor(vg$Sex, levels=c("F","M"))
maxim_val <- apply(df_norm_sex[, which(colnames(df_norm_sex)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val
sex_fig <- ggboxplot(vg, x = "Sex", y = "log2 Concentration", color = "Sex", facet.by = "Metabolite", fill = "Sex", alpha=0.4) + geom_point(aes(color = vg$Sex)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,bracket.nudge.y = 0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("pink","lightblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c("pink","lightblue"), labels = c("Female", "Male"))
print(sex_fig)
sup1A <- wrap_elements((as.grob(cor_fig)))
sup1B <- wrap_elements((as.grob(sex_fig)))
ggsave(file=here("paper/Figures/S1.png"),plot=sup1A / sup1B, dpi = 1000,bg="white" ,width = 8, height = 12, units = "in")
joined_df <- comp_sex
joined_df <- subset(joined_df, Metabolite%in%mets_int)
vg <- log_df_sex
colnames(vg) <- c("ID","Sex","Metabolite","log2 Concentration")
vg$Sex <- factor(vg$Sex, levels=c("F","M"))
maxim_val <- apply(df_norm_sex[, which(colnames(df_norm_sex)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val
sex_fig <- ggboxplot(vg, x = "Sex", y = "log2 Concentration", color = "Sex", facet.by = "Metabolite", fill = "Sex", alpha=0.4) + geom_point(aes(color = vg$Sex)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,bracket.nudge.y = -0.5) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("pink","lightblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c("pink","lightblue"), labels = c("Female", "Male"))
print(sex_fig)
sup1A <- wrap_elements((as.grob(cor_fig)))
sup1B <- wrap_elements((as.grob(sex_fig)))
ggsave(file=here("paper/Figures/S1.png"),plot=sup1A / sup1B, dpi = 1000,bg="white" ,width = 8, height = 12, units = "in")
joined_df <- comp_sex
joined_df <- subset(joined_df, Metabolite%in%mets_int)
vg <- log_df_sex
colnames(vg) <- c("ID","Sex","Metabolite","log2 Concentration")
vg$Sex <- factor(vg$Sex, levels=c("F","M"))
maxim_val <- apply(df_norm_sex[, which(colnames(df_norm_sex)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val
sex_fig <- ggboxplot(vg, x = "Sex", y = "log2 Concentration", color = "Sex", facet.by = "Metabolite", fill = "Sex", alpha=0.4) + geom_point(aes(color = vg$Sex)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,bracket.nudge.y = -0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("pink","lightblue"), labels = c("Female", "Male")) +
scale_fill_manual(values = c("pink","lightblue"), labels = c("Female", "Male"))
print(sex_fig)
sup1A <- wrap_elements((as.grob(cor_fig)))
sup1B <- wrap_elements((as.grob(sex_fig)))
ggsave(file=here("paper/Figures/S1.png"),plot=sup1A / sup1B, dpi = 1000,bg="white" ,width = 8, height = 12, units = "in")
ggsave(file=here("paper/Figures/S1.png"),plot=(sup1A / sup1B)+plot_annotation(tag_levels = "A"), dpi = 1000,bg="white" ,width = 8, height = 12, units = "in")
med.test$NONE
med.test$NONE
df_norm_meds
one_hot_encoded
vg <- merge(one_hot_encoded[,c(one_hot_encoded$id,one_hot_encoded$NONE)],df_norm_meds)
vg <- merge(one_hot_encoded[,c("id","NONE")],df_norm_meds)
vg
gsub(1,"No","Yes",vg$Medications)
vg$Medications
colnames(vg) <- c("ID","Medications","Metabolite","log2 Concentration")
gsub(1,"No","Yes",vg$Medications)
vg$Medications
gsub(1,"No","Yes",vg$Medications)
gsub("1","No","Yes",vg$Medications)
vg$Medications
gsub(1,"No","Yes",vg$Medications)
vg$Medications
sapply(gsub(vg$Medications, 1,"No","Yes"))
sapply(vg$Medications,gsub( 1,"No","Yes"))
?sapply
vg$Medications <- sapply(vg$Medications,gsub,1,"No","Yes")
vg$Medications
joined_df <- med.test$NONE
joined_df <- subset(joined_df, Metabolite%in%mets_int)
med.test$NONE
joined_df <- subset(joined_df, variable%in%mets_int)
vg <- merge(one_hot_encoded[,c("id","NONE")],df_norm_meds)
vg
sapply(vg$Medications,gsub,1,"No","Yes")
vg <- merge(one_hot_encoded[,c("id","NONE")],df_norm_meds)
vg$Medications
joined_df <- med.test$NONE
joined_df <- subset(joined_df, variable%in%mets_int)
vg <- merge(one_hot_encoded[,c("id","NONE")],df_norm_meds)
colnames(vg) <- c("ID","Medications","Metabolite","log2 Concentration")
vg$Medications
joined_df <- med.test$NONE
joined_df <- subset(joined_df, variable%in%mets_int)
vg <- merge(one_hot_encoded[,c("id","NONE")],df_norm_meds)
colnames(vg) <- c("ID","Medications","Metabolite","log2 Concentration")
vg$Medications <- factor(vg$Medications)
maxim_val <- apply(df_norm_meds[, which(colnames(df_norm_meds)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val
vg
joined_df <- med.test$NONE
joined_df <- subset(joined_df, variable%in%mets_int)
vg <- merge(one_hot_encoded[,c("id","NONE")],df_norm_meds)
colnames(vg) <- c("ID","Medications","Metabolite","log2 Concentration")
vg$Medications <- factor(vg$Medications)
maxim_val <- apply(df_norm_meds[, which(colnames(df_norm_meds)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val
med_fig <- ggboxplot(vg, x = "Age", y = "log2 Concentration", color = "Age", facet.by = "Metabolite", fill = "Age", alpha=0.4) + geom_point(aes(color = vg$Age)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,bracket.nudge.y = -0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("#095256","#493843"), labels = c("Medications", "No medications")) +
scale_fill_manual(values = c("#095256","#493843"), labels = c("Medications", "No medications"))
joined_df <- med.test$NONE
joined_df <- subset(joined_df, variable%in%mets_int)
vg <- merge(one_hot_encoded[,c("id","NONE")],df_norm_meds)
colnames(vg) <- c("ID","Medications","Metabolite","log2 Concentration")
vg$Medications <- factor(vg$Medications)
maxim_val <- apply(df_norm_meds[, which(colnames(df_norm_meds)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val
med_fig <- ggboxplot(vg, x = "Medications", y = "log2 Concentration", color = "Medications", facet.by = "Metabolite", fill = "Medications", alpha=0.4) + geom_point(aes(color = vg$Medications)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,bracket.nudge.y = -0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("#095256","#493843"), labels = c("Medications", "No medications")) +
scale_fill_manual(values = c("#095256","#493843"), labels = c("Medications", "No medications"))
print(med_fig)
vg$Medications
vg
joined_df
df_norm_meds
vg <- melt(vg, id.vars = c("id","NONE"))
joined_df <- med.test$NONE
joined_df <- subset(joined_df, variable%in%mets_int)
vg <- merge(one_hot_encoded[,c("id","NONE")],df_norm_meds)
vg <- melt(vg, id.vars = c("id","NONE"))
vg
colnames(vg) <- c("ID","Medications","Metabolite","log2 Concentration")
vg$Medications <- factor(vg$Medications)
maxim_val <- apply(df_norm_meds[, which(colnames(df_norm_meds)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val
med_fig <- ggboxplot(vg, x = "Medications", y = "log2 Concentration", color = "Medications", facet.by = "Metabolite", fill = "Medications", alpha=0.4) + geom_point(aes(color = vg$Medications)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,bracket.nudge.y = -0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("#095256","#493843"), labels = c("Medications", "No medications")) +
scale_fill_manual(values = c("#095256","#493843"), labels = c("Medications", "No medications"))
print(med_fig)
joined_df
vg
maxim_val
joined_df
ggboxplot(vg, x = "Medications", y = "log2 Concentration", color = "Medications", facet.by = "Metabolite", fill = "Medications", alpha=0.4) + geom_point(aes(color = vg$Medications)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,bracket.nudge.y = -0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("#095256","#493843"), labels = c("Medications", "No medications")) +
scale_fill_manual(values = c("#095256","#493843"), labels = c("Medications", "No medications"))
ggboxplot(vg, x = "Medications", y = "log2 Concentration", color = "Medications", facet.by = "Metabolite", fill = "Medications", alpha=0.4) + geom_point(aes(color = vg$Medications))
ggboxplot(vg, x = "Medications", y = "log2 Concentration", color = "Medications", facet.by = "Metabolite", fill = "Medications", alpha=0.4) + geom_point(aes(color = vg$Medications)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3)
joined_df
ggboxplot(vg, x = "Medications", y = "log2 Concentration", color = "Medications", facet.by = "Metabolite", fill = "Medications", alpha=0.4) + geom_point(aes(color = vg$Medications)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3)
ggboxplot(vg, x = "Medications", y = "log2 Concentration", color = "Medications", facet.by = "Metabolite", fill = "Medications", alpha=0.4) + geom_point(aes(color = vg$Medications)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,bracket.nudge.y = -0.1)
joined_df
comp_sex
joined_df <- med.test$NONE
colnames(joined_df)[1] <- "Metabolite"
joined_df <- subset(joined_df, Metabolite%in%mets_int)
vg <- merge(one_hot_encoded[,c("id","NONE")],df_norm_meds)
vg <- melt(vg, id.vars = c("id","NONE"))
colnames(vg) <- c("ID","Medications","Metabolite","log2 Concentration")
vg$Medications <- factor(vg$Medications)
maxim_val <- apply(df_norm_meds[, which(colnames(df_norm_meds)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val
med_fig <- ggboxplot(vg, x = "Medications", y = "log2 Concentration", color = "Medications", facet.by = "Metabolite", fill = "Medications", alpha=0.4) + geom_point(aes(color = vg$Medications)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,bracket.nudge.y = -0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("#095256","#493843"), labels = c("Medications", "No medications")) +
scale_fill_manual(values = c("#095256","#493843"), labels = c("Medications", "No medications"))
print(med_fig)
sup2 <- wrap_elements((as.grob(med_fig)))
ggsave(file=here("paper/Figures/S1.png"),plot=sup2+plot_annotation(tag_levels = "A"), dpi = 1000,bg="white" ,width = 8, height = 6, units = "in")
joined_df <- med.test$NONE
colnames(joined_df)[1] <- "Metabolite"
joined_df <- subset(joined_df, Metabolite%in%mets_int)
vg <- merge(one_hot_encoded[,c("id","NONE")],df_norm_meds)
vg <- melt(vg, id.vars = c("id","NONE"))
colnames(vg) <- c("ID","Medications","Metabolite","log2 Concentration")
vg$Medications <- factor(vg$Medications)
maxim_val <- apply(df_norm_meds[, which(colnames(df_norm_meds)%in%mets_int)], 2, max)
maxim_val <- maxim_val
joined_df$y.position <- maxim_val
med_fig <- ggboxplot(vg, x = "Medications", y = "log2 Concentration", color = "Medications", facet.by = "Metabolite", fill = "Medications", alpha=0.4) + geom_point(aes(color = vg$Medications)) +
facet_wrap(~ Metabolite, scales = "free", ncol = 3) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = FALSE,bracket.nudge.y = -0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "bottom"
) +
scale_color_manual(values = c("#095256","#F6BD60"), labels = c("Medications", "No medications")) +
scale_fill_manual(values = c("#095256","#F6BD60"), labels = c("Medications", "No medications"))
print(med_fig)
sup2 <- wrap_elements((as.grob(med_fig)))
ggsave(file=here("paper/Figures/S1.png"),plot=sup2+plot_annotation(tag_levels = "A"), dpi = 1000,bg="white" ,width = 8, height = 6, units = "in")
opsx
oplsda_sex
med.test
prop_meds
pat_ctrl_meds
pat_char
pat_char <-  read.csv(here("metadata/patient_characteristics.csv"),sep=";")
mets_int <- c("Leucine","Phenylalanine", "Tryptophan","5-Hydroxyindole-3-acetic acid", "Kynurenine", "Kynurenic acid", "Glutamic acid")
# Checking for effect medications
pat_contrl <-  subset(pat_char,!(pat_char$Disease=="Control"))
pat_contrl <- subset(pat_contrl,!(pat_contrl))
pat_char <-  read.csv(here("metadata/patient_characteristics.csv"),sep=";")
mets_int <- c("Leucine","Phenylalanine", "Tryptophan","5-Hydroxyindole-3-acetic acid", "Kynurenine", "Kynurenic acid", "Glutamic acid")
# Checking for effect medications
pat_contrl <-  subset(pat_char,!(pat_char$Disease=="Control"))
pat_contrl <- subset(pat_contrl,!(pat_contrl$Medications=="Unknown"))
pat_ctrl_meds <- pat_char[,c("ID","Medications")]
meds_lst <- strsplit(pat_ctrl_meds$Medications,",")
names(meds_lst) <- pat_ctrl_meds$ID
meds_lst <- lapply(meds_lst, function(x) toupper(str_squish(x)))
meds_lst <- lapply(meds_lst, data.frame)
meds_lst <- lapply(meds_lst, function(x) setNames(x, "Medication"))
meds_lst <- lapply(names(meds_lst), function(x) meds_lst[[x]] %>%
mutate(value = 1, id = x, Medication=factor(Medication)))
meds_lst <- bind_rows(meds_lst)
prop_meds <- data.frame(table(meds_lst$Medication))
prop_meds <- subset(prop_meds, Freq>3)
colnames(prop_meds) <- c("Medication","Freq")
one_hot_encoded <- meds_lst %>%
pivot_wider(names_from = Medication, values_from = value, values_fill = 0)
one_hot_encoded <- one_hot_encoded[,colnames(one_hot_encoded)%in%c("id",as.character(prop_meds$Medication))]
df_norm_meds <- df_norm_lab[,mets_int]
df_norm_meds <- rownames_to_column(df_norm_meds,var = "id")
df_norm_meds$id <- make.names(df_norm_meds$id)
df_norm_meds <- subset(df_norm_meds, make.names(df_norm_meds$id)%in%pat_contrl$ID)
med.test <- list()
for (i in prop_meds$Medication) {
df_norm_meds_i <- merge(one_hot_encoded[,c("id",i)],df_norm_meds)
long_med <- melt(df_norm_meds_i, id.vars=c("id",i))
colnames(long_med) <- c("id",make.names(i),"variable","value")
med.test[[i]] <-
long_med %>%
group_by(variable) %>%
wilcox_test(as.formula(paste0("value ~ ",make.names(i)))) %>%
adjust_pvalue(method="fdr") %>%
add_significance("p.adj")
}
med.test
pat_char <-  read.csv(here("metadata/patient_characteristics.csv"),sep=";")
mets_int <- c("Leucine","Phenylalanine", "Tryptophan","5-Hydroxyindole-3-acetic acid", "Kynurenine", "Kynurenic acid", "Glutamic acid")
# Checking for effect medications
pat_contrl <-  subset(pat_char,!(pat_char$Disease=="Control"))
pat_contrl <- subset(pat_contrl,!(pat_contrl$Medications=="Unknown"))
pat_ctrl_meds <- pat_char[,c("ID","Medications")]
meds_lst <- strsplit(pat_ctrl_meds$Medications,",")
names(meds_lst) <- pat_ctrl_meds$ID
meds_lst <- lapply(meds_lst, function(x) toupper(str_squish(x)))
meds_lst <- lapply(meds_lst, data.frame)
meds_lst <- lapply(meds_lst, function(x) setNames(x, "Medication"))
meds_lst <- lapply(names(meds_lst), function(x) meds_lst[[x]] %>%
mutate(value = 1, id = x, Medication=factor(Medication)))
meds_lst <- bind_rows(meds_lst)
prop_meds <- data.frame(table(meds_lst$Medication))
prop_meds <- subset(prop_meds, Freq>3)
colnames(prop_meds) <- c("Medication","Freq")
one_hot_encoded <- meds_lst %>%
pivot_wider(names_from = Medication, values_from = value, values_fill = 0)
one_hot_encoded <- one_hot_encoded[,colnames(one_hot_encoded)%in%c("id",as.character(prop_meds$Medication))]
df_norm_meds <- df_norm_lab[,mets_int]
df_norm_meds <- rownames_to_column(df_norm_meds,var = "id")
df_norm_meds$id <- make.names(df_norm_meds$id)
df_norm_meds <- subset(df_norm_meds, make.names(df_norm_meds$id)%in%pat_contrl$ID)
med.test <- list()
for (i in prop_meds$Medication) {
df_norm_meds_i <- merge(one_hot_encoded[,c("id",i)],df_norm_meds)
long_med <- melt(df_norm_meds_i, id.vars=c("id",i))
colnames(long_med) <- c("id",make.names(i),"variable","value")
med.test[[i]] <-
long_med %>%
group_by(variable) %>%
wilcox_test(as.formula(paste0("value ~ ",make.names(i)))) %>%
adjust_pvalue(method="fdr") %>%
add_significance("p.adj")
}
# Checking effect of age
pat_contrl <-  pat_char
pat_contrl <-  pat_contrl[order(pat_contrl$ID),]
pat_contrl <-  subset(pat_contrl,!(pat_contrl$Disease=="Control"))
df_norm_age <- df_norm_lab[,c("Label",mets_int)]
df_norm_age <- rownames_to_column(df_norm_age,var = "ID")
df_norm_age <- subset(df_norm_age, make.names(df_norm_age$ID)%in%pat_contrl$ID)
df_norm_age$Label <- pat_contrl$Age
df_norm_age <- df_norm_age[complete.cases(df_norm_age),]
log_df_age <- melt(df_norm_age, id.vars = c("ID","Label"))
colnames(df_norm_age) <- c(
"ID",
"Age",
"Leucine",
"Phenylalanine",
"Tryptophan",
"5-Hydroxyindole-3-acetic acid",
"Kynurenine",
"Kynurenic acid",
"Glutamic acid"
)
colnames(log_df_age) <- c(
"ID",
"Age",
"Metabolite",
"Concentration"
)
cor_age <- log_df_age %>%
dplyr::group_by(Metabolite) %>%
rstatix::cor_test(Age, Concentration, method= "pearson")  %>%
adjust_pvalue(method = "fdr") %>%
add_significance("p.adj")
cor.plot <- function(df,i) {
p = ggplot(data=df,aes(x=df$Age, y=df[[i]])) +
geom_point() +
stat_cor(method="pearson",aes(label = ..r.label..)) +
geom_smooth(method = "lm") +
ylab(i) +
xlab("Age (years)")
return(p)
}
cor_plot_lst <- lapply(mets_int, function(x) cor.plot(df_norm_age, x))
names(cor_plot_lst) <- mets_int
cor_fig <- ggarrange(plotlist=cor_plot_lst)
cor_fig <- annotate_figure(p=cor_fig,left = "log2 Concentration")
ggsave(here("paper/Figures/correlation_sel_mets.png"),cor_fig, bg = "white", width = 8, height = 6, units = "in", scale = 1.5)
# Checking effect of sex
pat_contrl <-  read.csv(here("metadata/patient_characteristics.csv"),sep=";")
pat_contrl <-  pat_contrl[,-7]
pat_contrl <-  pat_contrl[order(pat_contrl$ID),]
pat_contrl <-  subset(pat_contrl,!(pat_contrl$Disease=="Control"))
df_norm_sex <- df_norm_lab[,c("Label",mets_int)]
df_norm_sex <- rownames_to_column(df_norm_sex,var = "ID")
df_norm_sex <- subset(df_norm_sex, make.names(df_norm_sex$ID)%in%pat_contrl$ID)
df_norm_sex$Label <- factor(pat_contrl$Sex)
df_norm_sex <- df_norm_sex[complete.cases(df_norm_sex),]
log_df_sex <- melt(df_norm_sex, id.vars = c("ID","Label"))
colnames(df_norm_sex) <- c(
"ID",
"Sex",
"Leucine",
"Phenylalanine",
"Tryptophan",
"5-Hydroxyindole-3-acetic acid",
"Kynurenine",
"Kynurenic acid",
"Glutamic acid"
)
colnames(log_df_sex) <- c(
"ID",
"Sex",
"Metabolite",
"Concentration"
)
comp_sex <- log_df_sex %>%
group_by(Metabolite) %>%
wilcox_test(as.formula(Concentration ~ Sex), p.adjust.method = NULL) %>%
adjust_pvalue(method = "fdr") %>%
add_significance("p.adj")
rownames(df_norm_sex) <- df_norm_sex$ID
oplsda_sex <- opls(df_norm_sex[,-c(1,2)],as.factor(df_norm_sex$Sex),orthoI = 1,predI=1,scaleC = "center", permI = 1000)
sx <- factor(df_norm_sex$Sex)
opsx <- data.frame("lab"=sx,"x"=oplsda_sex@scoreMN,"y"=oplsda_sex@orthoScoreMN)
opsxplot <- opsx %>%
ggplot(aes(x=p1,y=o1,color=lab)) +
geom_point(size=3) +
stat_ellipse(geom = "polygon",
aes(fill = lab),
alpha = 0.25,
level = 0.8) +
coord_fixed(xlim = c(-10,10),ylim=c(-5,5)) +
theme_bw(base_size = 15) +
scale_color_manual(values=c("pink","lightblue"),labels=c("F","M"),drop = FALSE) +
scale_fill_manual(values=c("pink","lightblue"),labels=c("F","M"),drop = FALSE) +
theme(legend.title = element_blank()) +
geom_vline(xintercept=0) +
geom_hline(yintercept = 0)
ggsave(file=here("paper/Figures/OPLSDA_sex.png"),opsxplot, dpi = 500, width = 8, height = 4)
library(writexl)
write_xlsx(
med.test,
path = here("paper/Tables/comparing_medications.xlsx"),
col_names = TRUE,
format_headers = TRUE,
use_zip64 = FALSE
)
write_xlsx(cor_age,path = here("paper/Tables/correlation_age.xlsx"))
write_xlsx(comp_sex,path = here("paper/Tables/comparing_sex.xlsx"))
