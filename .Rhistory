df_metr <- subset(df_metr,Label%in%c(1,10,2))
df_metr <- df_metr[order(make.names(rownames(df_metr))),]
metdat <- metdat[order(metdat$COS.Code),]
rownames(df_metr) <- subset(metdat,metdat$COS.Code%in%make.names(rownames(df_metr)))$ID
df_metr <- data.frame(t(df_metr),check.names = FALSE)
mat_allr <- as.matrix(df_metr)
conds <- c("Hypoglutamatergic","Control")
labr <- data.frame(as.factor(mat_allr[1,]))
labr$as.factor.mat_allr.1.... <- gsub(2,"CDKL5  ",labr$as.factor.mat_allr.1....)
labr$as.factor.mat_allr.1.... <- gsub(10,"MeCP2  ",labr$as.factor.mat_allr.1....)
labr$as.factor.mat_allr.1.... <- gsub(1,"Control  ",labr$as.factor.mat_allr.1....)
colnames(labr)<-"Label"
labr$Label<- factor(labr$Label,levels = c("Control  ","MeCP2  ","CDKL5  "),ordered = TRUE)
mat_allr <- apply(mat_allr[-1,],c(1,2),as.numeric)
lcr <- c("#95C65C","#C70E7B","#808B96")
names(lcr) <-  levels(labr$Label)
lcr <- list(Label = lcr)
df_metg <- df_norm_lab[,c("Label",sels_g)]
df_metg <- subset(df_metg,Label%in%c(1,8,12))
df_metg <- df_metg[order(make.names(rownames(df_metg))),]
metdat <- metdat[order(metdat$COS.Code),]
rownames(df_metg) <- subset(metdat,metdat$COS.Code%in%make.names(rownames(df_metg)))$ID
df_metg <- data.frame(t(df_metg),check.names = FALSE)
mat_allg <- as.matrix(df_metg)
conds <- c("GRIN","Control")
labg <- data.frame(as.factor(mat_allg[1,]))
labg$as.factor.mat_allg.1.... <- gsub(8,"GRIN",labg$as.factor.mat_allg.1....)
labg$as.factor.mat_allg.1.... <- gsub(12,"STXBP1",labg$as.factor.mat_allg.1....)
labg$as.factor.mat_allg.1.... <- gsub(1,"Control",labg$as.factor.mat_allg.1....)
labg$as.factor.mat_allg.1.... <- gsub("STXBPControl","STXBP1  ",labg$as.factor.mat_allg.1....)
colnames(labg)<-"Label"
labg$Label<- factor(labg$Label,levels = c("Control","STXBP1  ","GRIN"),ordered = TRUE)
mat_allg <- apply(mat_allg[-1,],c(1,2),as.numeric)
lcg <- c("#95C65C","#46dbf2","#F19743")
names(lcg) <-  levels(labg$Label)
lcg <- list(Label = lcg)
vip_p <- vip_g
vip_p$`Hyperglutamatergic`$diffexpressed <- "None"
vip_p$`Hyperglutamatergic`$diffexpressed[vip_p$`Hyperglutamatergic`$VIP >= 1] <- "MVA"
vip_p$`Hyperglutamatergic`$diffexpressed[vip_p$`Hyperglutamatergic`$p.adj < 0.05] <- "UVA"
vip_p$`Hyperglutamatergic`$diffexpressed[vip_p$`Hyperglutamatergic`$p.adj < 0.05 & vip_p$`Hyperglutamatergic`$VIP > 1] <- "UVA+MVA"
vip_p$`Hyperglutamatergic`$diffexpressed <- factor(vip_p$`Hyperglutamatergic`$diffexpressed, levels = c("UVA+MVA", "MVA", "UVA", "None"))
vip_p$Hypoglutamatergic$diffexpressed <- "None"
vip_p$Hypoglutamatergic$diffexpressed[vip_p$Hypoglutamatergic$VIP >= 1] <- "MVA"
vip_p$Hypoglutamatergic$diffexpressed[vip_p$Hypoglutamatergic$p.adj < 0.05] <- "UVA"
vip_p$Hypoglutamatergic$diffexpressed[vip_p$Hypoglutamatergic$p.adj < 0.05 & vip_p$Hypoglutamatergic$VIP >= 1] <- "UVA+MVA"
vip_p$Hypoglutamatergic$diffexpressed <- factor(vip_p$Hypoglutamatergic$diffexpressed, levels = c("UVA+MVA", "MVA", "UVA", "None"))
library(patchwork)
col_op <- c("#B25D91", "#FF3F38","#95C65C")
names(col_op) <- c("Hypoglutamatergic","Hyperglutamatergic", "Control")
two_e <- ggplot(data =  vip_p$Hypoglutamatergic, aes(x = p.adj, y = VIP, label=Metabolite, col=diffexpressed)) +
geom_vline(xintercept = 0.05, col = "darkgray", linetype = 'dashed') +
geom_hline(yintercept = 1, col = "darkgray", linetype = 'dashed') +
geom_point(size = 3) +
# geom_text_repel(aes(label=ifelse(vip_p$Hypoglutamatergic$p.adj < 0.05,as.character(vip_p$Hypoglutamatergic$Metabolite),'')),max.overlaps = 15) +
scale_color_manual(values = c("#9900F0", "#FF00E4", "#38E54D","grey"), # to set the colors of our variable
labels = c("UVA+MVA", "MVA", "UVA", "None"), breaks = levels(vip_p$Hypoglutamatergic$diffexpressed)) +
theme_light() +
# coord_cartesian(ylim = c(0, 3.5), xlim = c(0, 3.5)) +
labs(color = 'Altered', #legend_title,
x = "p-value", y = "VIP score", title=NULL) +
theme(legend.position = "bottom") +
xlim(c(0,1))
two_f <- ggplot(data=vip_p$`Hyperglutamatergic` ,aes(x = p.adj, y = VIP,  label=Metabolite,col=diffexpressed)) +
geom_vline(xintercept = 0.05, col = "darkgray", linetype = 'dashed') +
geom_hline(yintercept = 1, col = "darkgray", linetype = 'dashed') +
geom_point(size = 3) +
# geom_text_repel(aes(label=ifelse(vip_p$`Hyperglutamatergic`$p.adj < 0.05,as.character(vip_p$`Hyperglutamatergic`$Metabolite),'')),max.overlaps = 15) +
scale_color_manual(values = c("#9900F0","#FF00E4","#38E54D",  "grey"), # to set the colours of our variable
labels = c("UVA+MVA", "MVA", "UVA", "None"), breaks = levels(vip_p$`Hyperglutamatergic`$diffexpressed)) +
theme_light() +
# coord_cartesian(ylim = c(0, 3.5), xlim = c(0, 3.5)) +
labs(color = 'Altered',
x = "p-value", y = "VIP score", title=NULL) +
theme(legend.position = "bottom")
ggsave(file="//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/paper/Figures/2C.jpeg",plot=two_e)
ggsave(file="//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/paper/Figures/2D.jpeg",plot=two_f)
vip_g2 <- vip_g$Hypoglutamatergic[order(vip_g$Hypoglutamatergic$VIP, decreasing = TRUE),]
vip_g2 <- subset(vip_g2, VIP > 1)
vip_g2$color <- factor(names(vip_g[1]),levels=c("Hypoglutamatergic","Hyperglutamatergic"))
two_c <- vip_g2 %>%
filter(!is.na(VIP)) %>%
arrange(VIP) %>%
mutate(Metabolite = factor(Metabolite, Metabolite)) %>%
ggplot() +
geom_point(aes(x = Metabolite, y = VIP, size = 3, color = color)) +
coord_flip() +
theme_light(base_size = 11) +
xlab("") +
ylab("VIP scores") +
ylim(0, 4) +
guides(size = "none") +
scale_color_manual(values = col_op[1], labels = NULL) +
theme(legend.position = "none")
vip_g2 <- vip_g$`Hyperglutamatergic`[order(vip_g$`Hyperglutamatergic`$VIP, decreasing = TRUE),]
vip_g2 <- subset(vip_g2, VIP > 1)
vip_g2$color <- factor(names(vip_g[2]),levels=c("Hypoglutamatergic","Hyperglutamatergic"))
two_d <- vip_g2 %>%
filter(!is.na(VIP)) %>%
arrange(VIP) %>%
mutate(Metabolite = factor(Metabolite, Metabolite)) %>%
ggplot() +
geom_point(aes(x = Metabolite, y = VIP, size = 3, color = color)) +
coord_flip() +
theme_light(base_size = 11) +
xlab("") +
ylab("VIP scores") +
ylim(0, 4) +
guides(size = "none") +
scale_color_manual(values = col_op[2], labels = NULL) +
theme(legend.position = "none")
ggsave(file="//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/paper/Figures/2C.jpeg",plot=two_c)
ggsave(file="//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/paper/Figures/2D.jpeg",plot=two_d)
two_g <- pheatmap(mat_allr, annotation = labr,clustering_method = "ward.D2",fontsize = 10,show_colnames = TRUE,show_rownames = TRUE, border_color = NA, annotation_colors = lc, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row",legend = FALSE,annotation_legend = FALSE)
two_h <- pheatmap(mat_allg, annotation = labg,clustering_method = "ward.D2",fontsize = 10,show_colnames = TRUE,show_rownames = TRUE, border_color = NA, annotation_colors = lcg, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row",legend = FALSE,annotation_legend = FALSE)
ggsave(file="//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/paper/Figures/2G.jpeg",plot=two_g)
ggsave(file="//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/paper/Figures/2H.jpeg",plot=two_h)
# plot(pd_g$Hypoglutamatergic,typeVc ="x-score",plotSubC="Hypoglutamatergic",parPaletteVc=c("#95C65C","#B25D91"))
# plot(pd_g$`Hyperglutamatergic`,typeVc ="x-score",plotSubC="Hypoglutamatergic",parPaletteVc=c("#95C65C","#FF3F38"))
rt <- factor(subset(df_norm_lab4,Label%in%c(1,10))$Label)
gr <- factor(subset(df_norm_lab4,Label%in%c(1,8))$Label)
opdf <- data.frame("lab"=rt,"x"=pd_g$Hypoglutamatergic@scoreMN,"y"=pd_g$Hypoglutamatergic@orthoScoreMN)
opdf2 <- data.frame("lab"=gr,"x"=pd_g$`Hyperglutamatergic`@scoreMN,"y"=pd_g$`Hyperglutamatergic`@orthoScoreMN)
# par(mfrow=c(1,2))
two_a <- opdf %>%
ggplot(aes(x=p1,y=o1,color=lab)) +
geom_point() +
stat_ellipse(geom = "polygon",
aes(fill = lab),
alpha = 0.25,
level = 0.8) +
coord_fixed(xlim = c(-10,10),ylim=c(-5,5)) +
theme_minimal() +
ggtitle(paste("OPLS-DA", "SCORE PLOT ",collapse="\n")) +
scale_color_manual(values=c("#95C65C","#B25D91"),labels=c("Control","Hyperglutamatergic")) +
scale_fill_manual(values=c("#95C65C","#B25D91"),labels=c("Control","Hyperglutamatergic")) +
theme(legend.title = element_blank())
two_b <- opdf2 %>%
ggplot(aes(x=p1,y=o1,color=lab)) +
geom_point() +
stat_ellipse(geom = "polygon",
aes(fill = lab),
alpha = 0.25,
level = 0.8) +
coord_fixed(xlim = c(-10,10),ylim=c(-5,5)) +
theme_minimal() +
ggtitle(paste("OPLS-DA", "SCORE PLOT ",collapse="\n")) +
scale_color_manual(values=c("#95C65C","#FF3F38"),labels=c("Control","Hypoglutamatergic")) +
scale_fill_manual(values=c("#95C65C","#FF3F38"),labels=c("Control","Hypoglutamatergic")) +
theme(legend.title = element_blank())
ggsave(file="//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/paper/Figures/2A.jpeg",plot=two_a)
ggsave(file="//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/paper/Figures/2B.jpeg",plot=two_b)
# op <- wrap_elements(two_a + two_b + plot_annotation(tag_levels = 'A') + plot_layout(guides = "keep",widths = c(1,1),heights = c(1,1)) & theme(legend.position = 'bottom'))
# two_g <- wrap_elements(as.grob(two_g))
# two_h <- wrap_elements(as.grob(two_h))
#
#
# (op/(two_c|two_d)/(two_e|two_f)/(two_g|two_h)+plot_annotation(tag_levels = 'A'))
# df_norm_lab6 <- df_norm_lab4[,c("rowname","Label",aas)]
# log_df_aa <- melt(df_norm_lab6[,-1],id.vars = "Label")
# man <- manova(cbind(Phenylalanine, Proline, Serine, Threonine, Tryptophan, Valine, Alanine, `Aspartic acid`, Glutamine, `Glutamic acid`, Glycine, Isoleucine, Leucine)~Label,df_norm_lab6)
#
# summary(man)
# summary.aov(man)
#
# an <- aov(value~Label*variable,log_df_aa)
# summary(an)
# summary.aov(an)
library(psych)
metdat_char <- read.csv("C:/Users/killescas/OneDrive - San Juan de Dios/Desktop/TESIS/LCR/metabolomica/meds_5h.csv",sep=";")
metdat_char <- metdat_char[complete.cases(metdat_char),]
metdat_char <- metdat_char %>%
column_to_rownames(var="ID")
contab <- table(metdat_char)
phi(contab,digits=3)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_knit$set(root.dir = 'C:/Users/killescas/Documents/GitHub/metabolomics/LCR/metabolomica')
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(purrr)
library(imputeTS)
library(reshape2)
library(ggpubr)
library(rstatix)
library(ggplot2)
library(ggbiplot)
library(ropls)
library(knitr)
library(factoextra)
library(ggrepel)
library(janitor)
library(patchwork)
library(ggplotify)
library(tidyverse)
df_norm_lab <- readRDS("//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/data_processed/wide_format_df.rds")
log_df <- readRDS("//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/data_processed/long_format_df.rds")
metdat <- read.csv("//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/metadata/metdat.csv", header=TRUE,row.names = 1,sep=";")
lcp <- c("#95C65C","#808B96","#F19743", "#C70E7B","#0ab2fa")
names(lcp) <- c("1","2","8","10","12")
lcps <- lcp[c("1","2","8","10","12")]
df_norm_lab_s <- df_norm_lab
pca_m1 <- prcomp(df_norm_lab_s[,-1], scale. = TRUE, center = TRUE)
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m1$x[, 1]))+2
# Create a list to store the modified plots
modified_plots <- list()
p1 <- ggbiplot(pca_m1,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = df_norm_lab_s$Label,
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcps, labels = c("Control", "MeCP2","STXBP1","CDKL5","GRIN")) +
xlim(-max_x_limit, max_x_limit)  +
ylim(-6,6)
p1 <- wrap_elements(as.grob(p1))
names(lcp) <- c("1","2","8","10","12")
lcps <- lcp[c("1","2","10")]
df_norm_lab_s <- subset(df_norm_lab, Label%in%c("2","10","1"))
pca_m2 <- prcomp(df_norm_lab_s[,-1], scale. = TRUE, center = TRUE)
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m2$x[, 1]))+2
# Create a list to store the modified plots
modified_plots <- list()
p2 <- ggbiplot(pca_m2,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = as.factor(df_norm_lab_s$Label),
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcps, labels = NULL) +
xlim(-max_x_limit, max_x_limit) +
ylim(-6,6) +
theme(legend.position="none")
p2 <- wrap_elements(as.grob(p2))
df_norm_lab_s <- subset(df_norm_lab, Label%in%c("12","8","1"))
pca_m3 <- prcomp(df_norm_lab_s[,-1], scale. = TRUE, center = TRUE)
lcps <- lcp[c("1","8","12")]
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m3$x[, 1]))+2
# Create a list to store the modified plots
modified_plots <- list()
p3 <- ggbiplot(pca_m3,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = as.factor(df_norm_lab_s$Label),
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcps, labels = c("Control","STXBP1","GRIN")) +
xlim(-max_x_limit, max_x_limit)  +
ylim(-6,6) +
theme(legend.position="none")
p3 <- wrap_elements(as.grob(p3))
library(ggbiplot)
df_norm_lab4 <- df_norm_lab
df_norm_lab4$Label <- ifelse(df_norm_lab4$Label==2,10,df_norm_lab4$Label)
df_norm_lab4$Label <- ifelse(df_norm_lab4$Label==12,8,df_norm_lab4$Label)
lcp3 <- c("#95C65C","#FF3F38","#B25D91")
pca_m <- prcomp(df_norm_lab4[,-1], scale. = TRUE, center = TRUE)
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m$x[, 1]))+2
# Create a list to store the modified plots
# library(imager)
# neurons <- load.image("/Users/sofiaillescas/Desktop/LAB/LCR/metabolomica/neuronas.jpg")
#
# nr <- ggplot() +
#   background_image(neurons)
df_meta <- df_norm_lab
# df_metg <- subset(df_metg,Label%in%c(1,10,2,12,8))
df_meta <- data.frame(t(df_meta),check.names = FALSE)
mat_alla <- as.matrix(df_meta)
laba <- data.frame(as.factor(mat_alla[1,]))
laba$as.factor.mat_alla.1.... <- gsub(12,"STXBP1  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(2,"CDKL5  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(10,"MeCP2  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(1,"Control  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(8,"GRIN  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub("STXBPControl    ","STXBP1  ",laba$as.factor.mat_alla.1....)
colnames(laba)<-"Label"
laba$Label<- factor(laba$Label,levels = c("Control  ","MeCP2  ","CDKL5  ", "STXBP1  ", "GRIN  "),ordered = TRUE)
mat_alla <- apply(mat_alla[-1,],c(1,2),as.numeric)
library(viridis)
library(pheatmap)
lc <- c("#95C65C","#C70E7B","#808B96","#46dbf2","#F19743")
names(lc) <-  levels(laba$Label)
lc <- list(Label = lc)
pheatmap(mat_alla, annotation = laba,clustering_method = "ward.D2",fontsize = 8,show_colnames = TRUE,show_rownames = FALSE,main = "Comparing patients to controls", border_color = NA, annotation_colors = lc, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row")
df_metr <- df_norm_lab
df_metr <- subset(df_metr,Label%in%c(1,10,2))
rownames(df_metr) <- subset(metdat,metdat$COS.Code%in%rownames(df_metr))$Gene.ID
df_metr <- data.frame(t(df_metr),check.names = FALSE)
mat_allr <- as.matrix(df_metr)
conds <- c("Hypoglutamatergic","Control")
labr <- data.frame(as.factor(mat_allr[1,]))
# rownames(labr) <- m
labr$as.factor.mat_allr.1.... <- gsub(2,"CDKL5  ",labr$as.factor.mat_allr.1....)
labr$as.factor.mat_allr.1.... <- gsub(10,"MeCP2  ",labr$as.factor.mat_allr.1....)
labr$as.factor.mat_allr.1.... <- gsub(1,"Control  ",labr$as.factor.mat_allr.1....)
colnames(labr)<-"Label"
labr$Label<- factor(labr$Label,levels = c("Control  ","MeCP2  ","CDKL5  "),ordered = TRUE)
mat_allr <- apply(mat_allr[-1,],c(1,2),as.numeric)
library(viridis)
library(pheatmap)
lc <- c("#95C65C","#C70E7B","#808B96")
names(lc) <-  levels(labr$Label)
lc <- list(Label = lc)
# colnames(mat_allr) <- subset(metdat,metdat$COS.Code%in%colnames(mat_allr))$Gene.ID
pheatmap(mat_allr, annotation = labr,clustering_method = "ward.D2",fontsize = 8,show_colnames = TRUE,show_rownames = FALSE, border_color = NA, annotation_colors = lc, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row",annotation_legend = TRUE)
df_metg <- df_norm_lab
df_metg <- subset(df_metg,Label%in%c(1,8,12))
rownames(df_metg) <- subset(metdat,metdat$COS.Code%in%rownames(df_metg))$Gene.ID
df_metg <- data.frame(t(df_metg),check.names = FALSE)
mat_allg <- as.matrix(df_metg)
conds <- c("GRIN","Control")
lab <- data.frame(as.factor(mat_allg[1,]))
lab$as.factor.mat_allg.1.... <- gsub(8,"GRIN",lab$as.factor.mat_allg.1....)
lab$as.factor.mat_allg.1.... <- gsub(12,"STXBP1",lab$as.factor.mat_allg.1....)
lab$as.factor.mat_allg.1.... <- gsub(1,"Control",lab$as.factor.mat_allg.1....)
lab$as.factor.mat_allg.1.... <- gsub("STXBPControl","STXBP1  ",lab$as.factor.mat_allg.1....)
colnames(lab)<-"Label"
lab$Label<- factor(lab$Label,levels = c("Control","STXBP1  ","GRIN"),ordered = TRUE)
mat_allg <- apply(mat_allg[-1,],c(1,2),as.numeric)
lc <- c("#95C65C","#46dbf2","#F19743")
names(lc) <-  levels(lab$Label)
lc <- list(Label = lc)
p5 <- pheatmap(mat_allg, annotation = lab,clustering_method = "ward.D2",fontsize = 8,show_colnames = TRUE,show_rownames = FALSE, border_color = NA, annotation_colors = lc, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row",legend = TRUE, annotation_legend = TRUE)
p5 <- wrap_elements(as.grob(p5))
# (nr|(p1/(p2+p3)/(p4+p5))+plot_layout(heights = c(1,2,2)))+plot_layout(guides = "collect")+plot_annotation(tag_levels = 'A')
lcp3 <- c("#FF3F38","#B25D91","#95C65C")
df_norm_lab4 <- df_norm_lab
df_norm_lab4$Label <- ifelse(df_norm_lab4$Label==2,10,df_norm_lab4$Label)
df_norm_lab4$Label <- ifelse(df_norm_lab4$Label==12,8,df_norm_lab4$Label)
df_norm_lab4 <- rownames_to_column(df_norm_lab4)
log_df1 <- melt(df_norm_lab4, id.vars=c("rowname","Label"))
ex_df1 <- log_df1
ex_df1$value <- exp(ex_df1$value)
ex_df1$value <-as.numeric(format(ex_df1$value, scientific = FALSE))
ex_df1$Label <- factor(ex_df1$Label)
#
# sam_stat <- log_df %>%
#   group_by(Label,variable) %>%
#   get_summary_stats(value, type = "median_iqr")
stat.test <-
log_df1 %>%
group_by(variable) %>%
wilcox_test(value ~ Label) %>%
adjust_pvalue(method="fdr") %>%
add_significance("p.adj")
sta_lst_sig <- stat.test
pd_g <- list()
vip_g <- list()
var_g <- list()
for (j in c(10,8)) {
df_norm_lab5 <- subset(df_norm_lab4, Label%in%c(j,1))
rownames(df_norm_lab5) <- df_norm_lab5$rowname
pd_g <- append(pd_g,opls(df_norm_lab5[,-c(1,2)],as.factor(df_norm_lab5$Label),orthoI = 1,predI=1,scaleC = "center", permI = 1000))
vip_g <- lapply(pd_g, function(x) data.frame(getVipVn(x)))
vip_g <- lapply(vip_g, function(x) {colnames(x) <- "VIP"; x})
vip_g <- lapply(vip_g, function(x) {x$Metabolite <- rownames(x); x})
var_g <- lapply(vip_g, function(x) data.frame(x$Metabolite[which(x$VIP>1)]))
}
names(pd_g) <- c("Hypoglutamatergic","Hyperglutamatergic")
tables <- lapply(pd_g, function(x) getSummaryDF(x))
lapply(names(tables),function(x) write.csv(tables[[x]],file=paste0("opls_diag_",x,".csv")))
names(var_g) <- c("Hypoglutamatergic","Hyperglutamatergic")
names(vip_g) <- c("Hypoglutamatergic","Hyperglutamatergic")
col_op <- c("#B25D91", "#FF3F38")
names(col_op) <- names(vip_g)
sels <- c()  # Create an empty list to store plots
for (i in 1:length(vip_g)) {
vip_g2 <- vip_g[[i]][order(vip_g[[i]]$VIP, decreasing = TRUE),]
vip_g2 <- subset(vip_g2, VIP > 1)
vip_g2$color <- names(vip_g[i])
sels <- append(sels, vip_g2$Metabolite)
p <- vip_g2 %>%
filter(!is.na(VIP)) %>%
arrange(VIP) %>%
mutate(Metabolite = factor(Metabolite, Metabolite)) %>%
ggplot() +
geom_point(aes(x = Metabolite, y = VIP, size = 3, color = color)) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = "right"
) +
theme_light() +
xlab("") +
ylab("VIP scores") +
ggtitle(c("Hypoglutamatergic", "Hypoglutamatergic")[i]) +
ylim(0, 3.5) +
guides(size = "none") +
scale_color_manual(values = col_op[i], labels=NULL)
plot(p) # Add the plot to the list
}
vip_g$Hypoglutamatergic$p.adj <- subset(sta_lst_sig,group2=="8"&group1=="1")$p.adj
vip_g$Hyperglutamatergic$p.adj <- subset(sta_lst_sig,group2=="10"&group1=="1")$p.adj
col_op <- c("#B25D91", "#FF3F38")
names(col_op) <- names(vip_g)
sels <- c()  # Create an empty list to store plots
for (i in 1:length(vip_g)) {
vip_g2 <- vip_g[[i]][order(vip_g[[i]]$VIP, decreasing = TRUE),]
vip_g2 <- subset(vip_g2, VIP > 1)
vip_g2$color <- names(vip_g[i])
sels <- append(sels, vip_g2$Metabolite)
}
library(httr)
library(KEGGREST)
background <- read.csv("//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/metadata/background.csv")
rows_to_remove <- grep("carnitine", background$Query)
background <- background[-rows_to_remove, ]
background$Query <- rownames(df_all)
View(df_norm_lab)
background$Query <- rownames(colnames(df_norm_lab))
background
background <- read.csv("//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/metadata/background.csv")
background
background <- background[-rows_to_remove, ]
background$Query <- rownames(colnames(df_norm_lab))
background
sels
library(httr)
library(KEGGREST)
background <- read.csv("//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/metadata/background.csv")
rows_to_remove <- grep("carnitine", background$Query)
background <- background[-rows_to_remove, ]
background$Query <- rownames(colnames(df_norm_lab))
sels_kegg <- subset(background, Query%in%sels)
background
background
background <- read.csv("//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/metadata/background.csv")
background
background <- read.csv("//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/metadata/background.csv")
rows_to_remove <- grep("carnitine", background$Query)
background <- background[-rows_to_remove, ]
background$Query <- colnames(df_norm_lab)
background
background$Query <- colnames(df_norm_lab)
colnames(df_norm_lab)
background$Query <- colnames(df_norm_lab[,-1])
background
sels_kegg <- subset(background, Query%in%sels)
sels_kegg
library(httr)
library(KEGGREST)
background <- read.csv("//hsjdbcn.es/dfsroot/Recursos/metabolismosinaptico/SOFIA/metabolomics_rett_grin/metadata/background.csv")
rows_to_remove <- grep("carnitine", background$Query)
background <- background[-rows_to_remove, ]
background$Query <- colnames(df_norm_lab[,-1])
sels_kegg <- subset(background, Query%in%sels)
names_sel <- sels_kegg$Query
sels_kegg <- sels_kegg$KEGG #now we need to select these metabolites in all_pathways to make the graph we want
names(sels_kegg) <- names_sel
# List of compound IDs
compound_ids <- na.omit(background$KEGG)
# Base URL for KEGG API
base_url <- "http://rest.kegg.jp"
# Function to retrieve pathways for a compound
get_pathways <- function(compound_id) {
request_url <- paste0(base_url, "/link/pathway/", compound_id)
response <- GET(request_url)
if (status_code(response) == 200) {
pathway_lines <- strsplit(content(response, "text"), "/n")[[1]]
pathways <- sapply(strsplit(pathway_lines, "/t"), `[`, 2)
return(pathways)
} else {
return(NULL)
}
}
# Retrieve pathways for each compound
all_pathways <- lapply(compound_ids, get_pathways)
all_pathways <- lapply(all_pathways,function(x) gsub("path:","",x))
names(all_pathways) <- compound_ids
freq <- table(unlist(all_pathways))
# Flatten the list of pathways
pathways <- na.omit(unique(unlist(all_pathways)))
path_names <- lapply(pathways, function(x) keggFind("pathway",x))
names(path_names) <- pathways
freq <- freq[pathways]
names(freq) <- path_names
freq <- data.frame(freq)
colnames(freq) <- c("Pathway","Hits")
freq
table(unlist(all_pathways))
all_pathways
compound_ids
sels_kegg
all_freq
all_pathways
sels_kegg
compound_ids
# Retrieve pathways for each compound
all_pathways <- lapply(compound_ids, get_pathways)
all_pathways
