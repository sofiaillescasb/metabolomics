library(janitor)
library(patchwork)
library(ggplotify)
library(here)
library(tidyverse)
df_norm_lab <- readRDS(here("data_processed/wide_format_df.rds"))
log_df <- readRDS(here("data_processed/long_format_df.rds"))
metdat <- read.csv(here("metadata/metdat.csv"), header=TRUE,row.names = 1,sep=";")
lcp <- c("#95C65C","#808B96","#F19743", "#C70E7B","#0ab2fa")
names(lcp) <- c("1","2","8","10","12")
lcps <- lcp[c("1","2","8","10","12")]
df_norm_lab_s <- df_norm_lab
pca_m1 <- prcomp(df_norm_lab_s[,-1], scale. = TRUE, center = TRUE)
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m1$x[, 1]))+2
# Create a list to store the modified plots
modified_plots <- list()
p1 <- ggbiplot(pca_m1,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = df_norm_lab_s$Label,
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcps, labels = c("Control", "MeCP2","STXBP1","CDKL5","GRIN")) +
xlim(-max_x_limit, max_x_limit)  +
ylim(-6,6)
p1 <- wrap_elements(as.grob(p1))
names(lcp) <- c("1","2","8","10","12")
lcps <- lcp[c("1","2","10")]
df_norm_lab_s <- subset(df_norm_lab, Label%in%c("2","10","1"))
pca_m2 <- prcomp(df_norm_lab_s[,-1], scale. = TRUE, center = TRUE)
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m2$x[, 1]))+2
# Create a list to store the modified plots
modified_plots <- list()
p2 <- ggbiplot(pca_m2,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = as.factor(df_norm_lab_s$Label),
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcps, labels = NULL) +
xlim(-max_x_limit, max_x_limit) +
ylim(-6,6) +
theme(legend.position="none")
p2 <- wrap_elements(as.grob(p2))
df_norm_lab_s <- subset(df_norm_lab, Label%in%c("12","8","1"))
pca_m3 <- prcomp(df_norm_lab_s[,-1], scale. = TRUE, center = TRUE)
lcps <- lcp[c("1","8","12")]
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m3$x[, 1]))+2
# Create a list to store the modified plots
modified_plots <- list()
p3 <- ggbiplot(pca_m3,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = as.factor(df_norm_lab_s$Label),
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcps, labels = c("Control","STXBP1","GRIN")) +
xlim(-max_x_limit, max_x_limit)  +
ylim(-6,6) +
theme(legend.position="none")
p3 <- wrap_elements(as.grob(p3))
library(ggbiplot)
df_norm_lab4 <- df_norm_lab
df_norm_lab4$Label <- ifelse(df_norm_lab4$Label==2,10,df_norm_lab4$Label)
df_norm_lab4$Label <- ifelse(df_norm_lab4$Label==12,8,df_norm_lab4$Label)
lcp3 <- c("#95C65C","#B25D91","#FF3F38")
pca_m <- prcomp(df_norm_lab4[,-1], scale. = TRUE, center = TRUE)
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m$x[, 1]))+2
df_norm_lab_s <- df_norm_lab4
p4 <- ggbiplot(pca_m,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = as.factor(df_norm_lab_s$Label),
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcp3, labels = c("Control","Hyperglutamatergic","Hypoglutamatergic")) +
xlim(-max_x_limit, max_x_limit)  +
ylim(-6,6) +
theme(legend.position="bottom")
p4 <- wrap_elements(as.grob(p4))
df_meta <- df_norm_lab
# df_metg <- subset(df_metg,Label%in%c(1,10,2,12,8))
df_meta <- data.frame(t(df_meta),check.names = FALSE)
mat_alla <- as.matrix(df_meta)
laba <- data.frame(as.factor(mat_alla[1,]))
laba$as.factor.mat_alla.1.... <- gsub(12,"STXBP1  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(2,"CDKL5  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(10,"MeCP2  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(1,"Control  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(8,"GRIN  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub("STXBPControl    ","STXBP1  ",laba$as.factor.mat_alla.1....)
colnames(laba)<-"Label"
laba$Label<- factor(laba$Label,levels = c("Control  ","MeCP2  ","CDKL5  ", "STXBP1  ", "GRIN  "),ordered = TRUE)
mat_alla <- apply(mat_alla[-1,],c(1,2),as.numeric)
library(viridis)
library(pheatmap)
lc <- c("#95C65C","#C70E7B","#808B96","#46dbf2","#F19743")
names(lc) <-  levels(laba$Label)
lc <- list(Label = lc)
pheatmap(mat_alla, annotation = laba,clustering_method = "ward.D2",fontsize = 8,show_colnames = TRUE,show_rownames = FALSE,main = "Comparing patients to controls", border_color = NA, annotation_colors = lc, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row")
df_metr <- df_norm_lab
df_metr <- subset(df_metr,Label%in%c(1,10,2))
rownames(df_metr) <- subset(metdat,make.names(metdat$COS.Code)%in%make.names(rownames(df_metr)))$ID
df_metr <- data.frame(t(df_metr),check.names = FALSE)
mat_allr <- as.matrix(df_metr)
conds <- c("Hypoglutamatergic","Control")
labr <- data.frame(as.factor(mat_allr[1,]))
# rownames(labr) <- m
labr$as.factor.mat_allr.1.... <- gsub(2,"CDKL5  ",labr$as.factor.mat_allr.1....)
labr$as.factor.mat_allr.1.... <- gsub(10,"MeCP2  ",labr$as.factor.mat_allr.1....)
labr$as.factor.mat_allr.1.... <- gsub(1,"Control  ",labr$as.factor.mat_allr.1....)
colnames(labr)<-"Label"
labr$Label<- factor(labr$Label,levels = c("Control  ","MeCP2  ","CDKL5  "),ordered = TRUE)
mat_allr <- apply(mat_allr[-1,],c(1,2),as.numeric)
library(viridis)
library(pheatmap)
lc <- c("#95C65C","#C70E7B","#808B96")
names(lc) <-  levels(labr$Label)
lc <- list(Label = lc)
# colnames(mat_allr) <- subset(metdat,metdat$COS.Code%in%colnames(mat_allr))$Gene.ID
p4 <- pheatmap(mat_allr, annotation = labr,clustering_method = "ward.D2",fontsize = 8,show_colnames = TRUE,show_rownames = FALSE, border_color = NA, annotation_colors = lc, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row",annotation_legend = TRUE)
df_metg <- df_norm_lab
df_metg <- subset(df_metg,Label%in%c(1,8,12))
rownames(df_metg) <- subset(metdat,make.names(metdat$COS.Code)%in%make.names(rownames(df_metg)))$ID
df_metg <- data.frame(t(df_metg),check.names = FALSE)
mat_allg <- as.matrix(df_metg)
conds <- c("GRIN","Control")
lab <- data.frame(as.factor(mat_allg[1,]))
lab$as.factor.mat_allg.1.... <- gsub(8,"GRIN",lab$as.factor.mat_allg.1....)
lab$as.factor.mat_allg.1.... <- gsub(12,"STXBP1",lab$as.factor.mat_allg.1....)
lab$as.factor.mat_allg.1.... <- gsub(1,"Control",lab$as.factor.mat_allg.1....)
lab$as.factor.mat_allg.1.... <- gsub("STXBPControl","STXBP1  ",lab$as.factor.mat_allg.1....)
colnames(lab)<-"Label"
lab$Label<- factor(lab$Label,levels = c("Control","STXBP1  ","GRIN"),ordered = TRUE)
mat_allg <- apply(mat_allg[-1,],c(1,2),as.numeric)
lc <- c("#95C65C","#46dbf2","#F19743")
names(lc) <-  levels(lab$Label)
lc <- list(Label = lc)
p5 <- pheatmap(mat_allg, annotation = lab,clustering_method = "ward.D2",fontsize = 8,show_colnames = TRUE,show_rownames = FALSE, border_color = NA, annotation_colors = lc, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row",legend = TRUE, annotation_legend = TRUE)
p5 <- wrap_elements(as.grob(p5))
# (nr|(p1/(p2+p3)/(p4+p5))+plot_layout(heights = c(1,2,2)))+plot_layout(guides = "collect")+plot_annotation(tag_levels = 'A')
pd_g <- list()
vip_g <- list()
var_g <- list()
for (j in c(10,8)) {
df_norm_lab5 <- subset(df_norm_lab4, Label%in%c(j,1))
rownames(df_norm_lab5) <- df_norm_lab5$rowname
pd_g <- append(pd_g,opls(df_norm_lab5[,-c(1)],as.factor(df_norm_lab5$Label),orthoI = 1,predI=1,scaleC = "center", permI = 1000))
vip_g <- lapply(pd_g, function(x) data.frame(getVipVn(x)))
vip_g <- lapply(vip_g, function(x) {colnames(x) <- "VIP"; x})
vip_g <- lapply(vip_g, function(x) {x$Metabolite <- rownames(x); x})
var_g <- lapply(vip_g, function(x) data.frame(x$Metabolite[which(x$VIP>1)]))
}
names(pd_g) <- c("Hyperglutamatergic","Hypoglutamatergic")
tables <- lapply(pd_g, function(x) getSummaryDF(x))
lapply(names(tables),function(x) write.csv(tables[[x]],file=paste0("opls_diag_",x,".csv")))
names(var_g) <- c("Hyperglutamatergic","Hypoglutamatergic")
names(vip_g) <- c("Hyperglutamatergic","Hypoglutamatergic")
col_op <- c("#B25D91", "#FF3F38")
names(col_op) <- names(vip_g)
sels <- c()  # Create an empty list to store plots
for (i in 1:length(vip_g)) {
vip_g2 <- vip_g[[i]][order(vip_g[[i]]$VIP, decreasing = TRUE),]
vip_g2 <- subset(vip_g2, VIP > 1)
vip_g2$color <- names(vip_g[i])
sels <- append(sels, vip_g2$Metabolite)
p <- vip_g2 %>%
filter(!is.na(VIP)) %>%
arrange(VIP) %>%
mutate(Metabolite = factor(Metabolite, Metabolite)) %>%
ggplot() +
geom_point(aes(x = Metabolite, y = VIP, size = 3, color = color)) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = "right"
) +
theme_light() +
xlab("") +
ylab("VIP scores") +
ggtitle(c("Hyperglutamatergic", "Hypoglutamatergic")[i]) +
ylim(0, 3.5) +
guides(size = "none") +
scale_color_manual(values = col_op[i], labels=NULL)
plot(p)
}
df_norm_lab5
df_norm_lab4
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(purrr)
library(imputeTS)
library(reshape2)
library(ggpubr)
library(rstatix)
library(ggplot2)
library(ggbiplot)
library(ropls)
library(knitr)
library(factoextra)
library(ggrepel)
library(janitor)
library(patchwork)
library(ggplotify)
library(here)
library(tidyverse)
df_norm_lab <- readRDS(here("data_processed/wide_format_df.rds"))
log_df <- readRDS(here("data_processed/long_format_df.rds"))
metdat <- read.csv(here("metadata/metdat.csv"), header=TRUE,row.names = 1,sep=";")
lcp <- c("#95C65C","#808B96","#F19743", "#C70E7B","#0ab2fa")
names(lcp) <- c("1","2","8","10","12")
lcps <- lcp[c("1","2","8","10","12")]
df_norm_lab_s <- df_norm_lab
pca_m1 <- prcomp(df_norm_lab_s[,-1], scale. = TRUE, center = TRUE)
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m1$x[, 1]))+2
# Create a list to store the modified plots
modified_plots <- list()
p1 <- ggbiplot(pca_m1,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = df_norm_lab_s$Label,
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcps, labels = c("Control", "MeCP2","STXBP1","CDKL5","GRIN")) +
xlim(-max_x_limit, max_x_limit)  +
ylim(-6,6)
p1 <- wrap_elements(as.grob(p1))
names(lcp) <- c("1","2","8","10","12")
lcps <- lcp[c("1","2","10")]
df_norm_lab_s <- subset(df_norm_lab, Label%in%c("2","10","1"))
pca_m2 <- prcomp(df_norm_lab_s[,-1], scale. = TRUE, center = TRUE)
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m2$x[, 1]))+2
# Create a list to store the modified plots
modified_plots <- list()
p2 <- ggbiplot(pca_m2,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = as.factor(df_norm_lab_s$Label),
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcps, labels = NULL) +
xlim(-max_x_limit, max_x_limit) +
ylim(-6,6) +
theme(legend.position="none")
p2 <- wrap_elements(as.grob(p2))
df_norm_lab_s <- subset(df_norm_lab, Label%in%c("12","8","1"))
pca_m3 <- prcomp(df_norm_lab_s[,-1], scale. = TRUE, center = TRUE)
lcps <- lcp[c("1","8","12")]
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m3$x[, 1]))+2
# Create a list to store the modified plots
modified_plots <- list()
p3 <- ggbiplot(pca_m3,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = as.factor(df_norm_lab_s$Label),
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcps, labels = c("Control","STXBP1","GRIN")) +
xlim(-max_x_limit, max_x_limit)  +
ylim(-6,6) +
theme(legend.position="none")
p3 <- wrap_elements(as.grob(p3))
library(ggbiplot)
df_norm_lab4 <- df_norm_lab
df_norm_lab4$Label <- ifelse(df_norm_lab4$Label==2,10,df_norm_lab4$Label)
df_norm_lab4$Label <- ifelse(df_norm_lab4$Label==12,8,df_norm_lab4$Label)
lcp3 <- c("#95C65C","#B25D91","#FF3F38")
pca_m <- prcomp(df_norm_lab4[,-1], scale. = TRUE, center = TRUE)
# Get the maximum x-axis limit among all the plots
max_x_limit <- max(abs(pca_m$x[, 1]))+2
df_norm_lab_s <- df_norm_lab4
p4 <- ggbiplot(pca_m,
choices = c(1,2),
obs.scale = 1,
var.scale = 1,
var.axes = FALSE,
circle = TRUE,
ellipse = FALSE,
groups = as.factor(df_norm_lab_s$Label),
fill = TRUE) +
theme_light(base_size = 10) +
labs(colour = "Mutated gene") +
geom_point(aes(color = as.factor(df_norm_lab_s$Label)), size = 4) +
scale_color_manual(values = lcp3, labels = c("Control","Hyperglutamatergic","Hypoglutamatergic")) +
xlim(-max_x_limit, max_x_limit)  +
ylim(-6,6) +
theme(legend.position="bottom")
p4 <- wrap_elements(as.grob(p4))
df_meta <- df_norm_lab
# df_metg <- subset(df_metg,Label%in%c(1,10,2,12,8))
df_meta <- data.frame(t(df_meta),check.names = FALSE)
mat_alla <- as.matrix(df_meta)
laba <- data.frame(as.factor(mat_alla[1,]))
laba$as.factor.mat_alla.1.... <- gsub(12,"STXBP1  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(2,"CDKL5  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(10,"MeCP2  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(1,"Control  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub(8,"GRIN  ",laba$as.factor.mat_alla.1....)
laba$as.factor.mat_alla.1.... <- gsub("STXBPControl    ","STXBP1  ",laba$as.factor.mat_alla.1....)
colnames(laba)<-"Label"
laba$Label<- factor(laba$Label,levels = c("Control  ","MeCP2  ","CDKL5  ", "STXBP1  ", "GRIN  "),ordered = TRUE)
mat_alla <- apply(mat_alla[-1,],c(1,2),as.numeric)
library(viridis)
library(pheatmap)
lc <- c("#95C65C","#C70E7B","#808B96","#46dbf2","#F19743")
names(lc) <-  levels(laba$Label)
lc <- list(Label = lc)
pheatmap(mat_alla, annotation = laba,clustering_method = "ward.D2",fontsize = 8,show_colnames = TRUE,show_rownames = FALSE,main = "Comparing patients to controls", border_color = NA, annotation_colors = lc, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row")
df_metr <- df_norm_lab
df_metr <- subset(df_metr,Label%in%c(1,10,2))
rownames(df_metr) <- subset(metdat,make.names(metdat$COS.Code)%in%make.names(rownames(df_metr)))$ID
df_metr <- data.frame(t(df_metr),check.names = FALSE)
mat_allr <- as.matrix(df_metr)
conds <- c("Hypoglutamatergic","Control")
labr <- data.frame(as.factor(mat_allr[1,]))
# rownames(labr) <- m
labr$as.factor.mat_allr.1.... <- gsub(2,"CDKL5  ",labr$as.factor.mat_allr.1....)
labr$as.factor.mat_allr.1.... <- gsub(10,"MeCP2  ",labr$as.factor.mat_allr.1....)
labr$as.factor.mat_allr.1.... <- gsub(1,"Control  ",labr$as.factor.mat_allr.1....)
colnames(labr)<-"Label"
labr$Label<- factor(labr$Label,levels = c("Control  ","MeCP2  ","CDKL5  "),ordered = TRUE)
mat_allr <- apply(mat_allr[-1,],c(1,2),as.numeric)
library(viridis)
library(pheatmap)
lc <- c("#95C65C","#C70E7B","#808B96")
names(lc) <-  levels(labr$Label)
lc <- list(Label = lc)
# colnames(mat_allr) <- subset(metdat,metdat$COS.Code%in%colnames(mat_allr))$Gene.ID
p4 <- pheatmap(mat_allr, annotation = labr,clustering_method = "ward.D2",fontsize = 8,show_colnames = TRUE,show_rownames = FALSE, border_color = NA, annotation_colors = lc, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row",annotation_legend = TRUE)
df_metg <- df_norm_lab
df_metg <- subset(df_metg,Label%in%c(1,8,12))
rownames(df_metg) <- subset(metdat,make.names(metdat$COS.Code)%in%make.names(rownames(df_metg)))$ID
df_metg <- data.frame(t(df_metg),check.names = FALSE)
mat_allg <- as.matrix(df_metg)
conds <- c("GRIN","Control")
lab <- data.frame(as.factor(mat_allg[1,]))
lab$as.factor.mat_allg.1.... <- gsub(8,"GRIN",lab$as.factor.mat_allg.1....)
lab$as.factor.mat_allg.1.... <- gsub(12,"STXBP1",lab$as.factor.mat_allg.1....)
lab$as.factor.mat_allg.1.... <- gsub(1,"Control",lab$as.factor.mat_allg.1....)
lab$as.factor.mat_allg.1.... <- gsub("STXBPControl","STXBP1  ",lab$as.factor.mat_allg.1....)
colnames(lab)<-"Label"
lab$Label<- factor(lab$Label,levels = c("Control","STXBP1  ","GRIN"),ordered = TRUE)
mat_allg <- apply(mat_allg[-1,],c(1,2),as.numeric)
lc <- c("#95C65C","#46dbf2","#F19743")
names(lc) <-  levels(lab$Label)
lc <- list(Label = lc)
p5 <- pheatmap(mat_allg, annotation = lab,clustering_method = "ward.D2",fontsize = 8,show_colnames = TRUE,show_rownames = FALSE, border_color = NA, annotation_colors = lc, fontsize_col = 10, color = colorRampPalette(c("blue","red"))(100), cluster_rows = TRUE,scale = "row",legend = TRUE, annotation_legend = TRUE)
p5 <- wrap_elements(as.grob(p5))
# (nr|(p1/(p2+p3)/(p4+p5))+plot_layout(heights = c(1,2,2)))+plot_layout(guides = "collect")+plot_annotation(tag_levels = 'A')
pd_g <- list()
vip_g <- list()
var_g <- list()
for (j in c(10,8)) {
df_norm_lab5 <- subset(df_norm_lab4, Label%in%c(j,1))
rownames(df_norm_lab5) <- df_norm_lab5$rowname
pd_g <- append(pd_g,opls(df_norm_lab5[,-c(1)],as.factor(df_norm_lab5$Label),orthoI = 1,predI=1,scaleC = "center", permI = 1000))
vip_g <- lapply(pd_g, function(x) data.frame(getVipVn(x)))
vip_g <- lapply(vip_g, function(x) {colnames(x) <- "VIP"; x})
vip_g <- lapply(vip_g, function(x) {x$Metabolite <- rownames(x); x})
var_g <- lapply(vip_g, function(x) data.frame(x$Metabolite[which(x$VIP>1)]))
}
names(pd_g) <- c("Hyperglutamatergic","Hypoglutamatergic")
tables <- lapply(pd_g, function(x) getSummaryDF(x))
lapply(names(tables),function(x) write.csv(tables[[x]],file=paste0("opls_diag_",x,".csv")))
names(var_g) <- c("Hyperglutamatergic","Hypoglutamatergic")
names(vip_g) <- c("Hyperglutamatergic","Hypoglutamatergic")
col_op <- c("#B25D91", "#FF3F38")
names(col_op) <- names(vip_g)
sels <- c()  # Create an empty list to store plots
for (i in 1:length(vip_g)) {
vip_g2 <- vip_g[[i]][order(vip_g[[i]]$VIP, decreasing = TRUE),]
vip_g2 <- subset(vip_g2, VIP > 1)
vip_g2$color <- names(vip_g[i])
sels <- append(sels, vip_g2$Metabolite)
p <- vip_g2 %>%
filter(!is.na(VIP)) %>%
arrange(VIP) %>%
mutate(Metabolite = factor(Metabolite, Metabolite)) %>%
ggplot() +
geom_point(aes(x = Metabolite, y = VIP, size = 3, color = color)) +
coord_flip() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = "right"
) +
theme_light() +
xlab("") +
ylab("VIP scores") +
ggtitle(c("Hyperglutamatergic", "Hypoglutamatergic")[i]) +
ylim(0, 3.5) +
guides(size = "none") +
scale_color_manual(values = col_op[i], labels=NULL)
plot(p)
}
lcp3 <- c("#FF3F38","#B25D91","#95C65C")
df_norm_lab4 <- df_norm_lab
df_norm_lab4$Label <- ifelse(df_norm_lab4$Label==2,10,df_norm_lab4$Label)
df_norm_lab4$Label <- ifelse(df_norm_lab4$Label==12,8,df_norm_lab4$Label)
df_norm_lab4 <- rownames_to_column(df_norm_lab4)
log_df1 <- melt(df_norm_lab4, id.vars=c("rowname","Label"))
ex_df1 <- log_df1
ex_df1$value <- exp(ex_df1$value)
ex_df1$value <-as.numeric(format(ex_df1$value, scientific = FALSE))
ex_df1$Label <- factor(ex_df1$Label)
stat.test <-
log_df1 %>%
group_by(variable) %>%
Anova(value ~ Label)
apply(df_norm_lab4[,-1], 2, aov(.~Label))
?aov
aov_form <- sapply(colnames(df_norm_lab4[,-1]), function(x) as.formula(paste0(x,"~Label")))
aov_form <- sapply(colnames(df_norm_lab4[,-1]), function(x) as.formula(paste0("`",x,"`","~Label")))
aov_form
df_norm_lab4
aov_form <- sapply(colnames(df_norm_lab4[,-c(1,2)]), function(x) as.formula(paste0("`",x,"`","~Label")))
aov_form
aov_lst <- lapply(aov_form, aov)
?Anova
?aov
aov_form <- sapply(make.names(colnames(df_norm_lab4[,-c(1,2)])), function(x) as.formula(paste0(x,"~Label")))
aov_form
df_norm_aov <- df_norm_lab4
colnames(df_norm_aov)
colnames(df_norm_aov) <- make.names(colnames(df_norm_aov))
aov_lst <- lapply(aov_form, aov, df_norm_aov)
aov_lst
residuals(aov_lst)
lapply(aov_lst, residuals)
resds <- lapply(aov_lst, residuals)
lapply(resds,ggqqplot)
?ggqqplot
names(resds)
lapply(names(resds), function(x) ggqqplot(resds[x]))
lapply(names(resds), function(x) ggqqplot(resds[x]))
lapply(names(resds), function(x) ggqqplot(resds[[x]]))
lapply(names(resds), function(x) ggqqplot(resds[[x]], title = x))
lapply(names(resds), function(x) ggqqplot(resds[[x]], title = paste("Q-Q plot of residuals",x)))
lapply(names(resds), function(x) ggqqplot(resds[[x]], title = paste("Q-Q plot of residuals",x)))
lapply(aov_lst,fitted)
fitd <- lapply(aov_lst,fitted)
names(fitted)
names(fitd)
abline(0,0)
for(i in names(fitd)) {
p = plot(fitd[[i]],resds[[i]])
abline(0,0)
}
for(i in names(fitd)) {
plot(fitd[[i]],resds[[i]])
abline(0,0)
}
resds
fitd
names(fitd)
names(resds)
for(i in names(fitd)) {
plot(fitd[[i]],resds[[i]])
abline(0,0)
}
lapply(aov_lst, plot)
