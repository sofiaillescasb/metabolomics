"Alanine",
"Aspartic acid",
"Glycine",
"Isoleucine",
"Leucine",
"Phenylalanine")
lcp4 <- c("#95C65C","#B25D91","#FF3F38")
joined_df <- sta_lst_sig
joined_df <- subset(joined_df, variable%in%tryp_mets)
vg <- log_df1[log_df1$variable %in% joined_df$variable, ]
colnames(vg) <- c("rowname","Label","variable","log2 Concentration")
vg$Label <- factor(vg$Label, levels=c("1","10","8"))
maxim_val <- apply(df_norm_lab4[, which(colnames(df_norm_lab4)%in%tryp_mets)], 2, max)
maxim_val <- maxim_val + 0.5
joined_df$y.position <- c(sapply(maxim_val, function(x) rep(x,3)))
four4 <- ggboxplot(vg, x = "Label", y = "log2 Concentration", color = "Label", facet.by = "variable", fill = "Label", alpha=0.4) + geom_point(aes(color = vg$Label)) +
facet_wrap(~ variable, scales = "free", ncol = 4) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = TRUE,step.increase = 0.2,bracket.nudge.y = -0.5) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA), legend.position = "bottom",legend.text = element_text(size=12),legend.title=element_text(size=12),legend.box.spacing = unit(0.5, "in")) +
scale_color_manual(values = lcp4, labels = c("Control","Hyper-glutamatergic","Hypoglutamatergic")) +
scale_fill_manual(values = lcp4, labels = c("Control","Hyper-glutamatergic","Hypoglutamatergic"))
print(four4)
uni1 <- wrap_elements((as.grob(four4)))
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 1000,bg="white" ,width = 8, height = 11.4, units = "in", scale = 2)
joined_df <- sta_lst_sig
joined_df <- subset(joined_df, variable%in%aas)
vg <- log_df1[log_df1$variable %in% joined_df$variable, ]
colnames(vg) <- c("rowname","Label","variable","log2 Concentration")
vg$Label <- factor(vg$Label, levels=c("1","10","8"))
maxim_val <- apply(df_norm_lab4[, which(colnames(df_norm_lab4)%in%aas)], 2, max)
maxim_val <- maxim_val + 0.05
joined_df$y.position <- c(sapply(maxim_val, function(x) rep(x,3)))
four4 <- ggboxplot(vg, x = "Label", y = "log2 Concentration", color = "Label", facet.by = "variable", fill = "Label", alpha=0.4) + geom_point(aes(color = vg$Label)) +
facet_wrap(~ variable, scales = "free", ncol = 4) +
stat_pvalue_manual(joined_df, label = "p.adj.signif", y.position = "y.position",hide.ns = TRUE,step.increase = 0.1) +
theme(
axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(),plot.background = element_rect(fill = "transparent",colour = NA),legend.position = "none"
) +
scale_color_manual(values = lcp4, labels = c("Control","Hyper-glutamatergic","Hypoglutamatergic")) +
scale_fill_manual(values = lcp4, labels = c("Control","Hyper-glutamatergic","Hypoglutamatergic"))
print(four4)
uni2 <- wrap_elements((as.grob(four4)))
full_four <- uni1 / uni2 + plot_annotation(tag_levels = list(c("B","C")))
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 1000,bg="white" ,width = 8, height = 11.4, units = "in", scale = 2)
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 1000,bg="white" ,width = 8, height = 11.4, units = "in", scale = 1.5)
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 1000,bg="white" ,width = 8, height = 11.4, units = "in", scale = 1.2)
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 2000,bg="white" ,width = 8, height = 12, units = "in", scale = 1.2)
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 2000,bg="white" ,width = 9, height = 12, units = "in", scale = 1.1)
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 2000,bg="white" ,width = 9, height = 11.4, units = "in")
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 2000,bg="white" ,width = 10, height = 11.4, units = "in")
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 2000,bg="white" ,width = 10, height = 13, units = "in")
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 1000,bg="white" ,width = 10, height = 13, units = "in")
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 900,bg="white" ,width = 10, height = 13, units = "in")
ggsave(file=here("paper/Figures/4.png"),plot=full_four, dpi = 1000,bg="white" ,width = 10, height = 13, units = "in")
install.packages("vtable")
library(vtable)
iris
df_norm_lab4
?column_to_rownames
df_norm_lab4
st(column_to_rownames(df_norm_lab4, var = "rowname"),group = "Label", group.test = TRUE)
?st
st(column_to_rownames(df_norm_lab4, var = "rowname"),group = "Label", group.test = TRUE, add.median = TRUE)
install.packages("qwraps2")
library(qwraps2)
library(qwraps2)
?median_iqr
library(purrr)
library(readxl)
library(janitor)
library(imputeTS)
library(reshape2)
library(writexl)
library(tidyverse)
library(here)
metdat <- read.csv(here("metadata/metdat.csv"), header=TRUE,row.names = 1,sep=";")
# metdat <- read.csv("/Users/sofiaillescas/Desktop/LAB/LCR/metabolomica/metdat.csv", header=TRUE, row.names = 1)
metdat_char <- read.csv(here("metadata/patient_characteristics.csv"),sep=";")
df_list <- map(purrr::set_names(excel_sheets(here("data_raw/P21145_Results_final.xlsx"))),
read_excel, path = here("data_raw/P21145_Results_final.xlsx"),
)
# df_list <- map(purrr::set_names(excel_sheets("/Users/sofiaillescas/Desktop/LAB/LCR/metabolomica/P21145_Results_final.xlsx")),
#   read_excel, path = "/Users/sofiaillescas/Desktop/LAB/LCR/metabolomica/P21145_Results_final.xlsx",)
df_list <- lapply(df_list,t)
df_list <- lapply(df_list,data.frame)
df_csf <- df_list[names(df_list) %in% "Plasma_GCMS" == FALSE]
df_csf <- lapply(df_csf,function(x) x[,1:41])
df_all <- rbind(df_csf$"Tryptophan & metabolites",df_csf$"CSF_GCMS")
df_all <- df_all %>%
row_to_names(row_number = 1)
df_all <- subset(df_all, rownames(df_all)!="COS Code1")
# df_all <- subset(df_all, rownames(df_all)!="Sample ID1")
# df_all <- subset(df_all, rownames(df_all)!="Sample ID")
df_all <- subset(df_all,rowSums(is.na(df_all))!=ncol(df_all))
df_all_num <- apply(df_all, c(1,2), as.numeric)
rows_to_remove <- grep("Carn", rownames(df_all_num))
df_all_num <- df_all_num[-rows_to_remove,]
mins <- apply(df_all_num,1,min,na.rm=TRUE)
mins <- mins/2
df_all <- data.frame(na_replace(df_all_num))
df_all <- df_all+mins
colnames(df_all) <- gsub("\\."," ",colnames(df_all))
metdat <- subset(metdat, COS.Code != "CSF.18")
library(purrr)
library(readxl)
library(janitor)
library(imputeTS)
library(reshape2)
library(writexl)
library(qwraps2)
library(tidyverse)
library(here)
metdat <- read.csv(here("metadata/metdat.csv"), header=TRUE,row.names = 1,sep=";")
# metdat <- read.csv("/Users/sofiaillescas/Desktop/LAB/LCR/metabolomica/metdat.csv", header=TRUE, row.names = 1)
metdat_char <- read.csv(here("metadata/patient_characteristics.csv"),sep=";")
df_list <- map(purrr::set_names(excel_sheets(here("data_raw/P21145_Results_final.xlsx"))),
read_excel, path = here("data_raw/P21145_Results_final.xlsx"),
)
# df_list <- map(purrr::set_names(excel_sheets("/Users/sofiaillescas/Desktop/LAB/LCR/metabolomica/P21145_Results_final.xlsx")),
#   read_excel, path = "/Users/sofiaillescas/Desktop/LAB/LCR/metabolomica/P21145_Results_final.xlsx",)
df_list <- lapply(df_list,t)
df_list <- lapply(df_list,data.frame)
df_csf <- df_list[names(df_list) %in% "Plasma_GCMS" == FALSE]
df_csf <- lapply(df_csf,function(x) x[,1:41])
df_all <- rbind(df_csf$"Tryptophan & metabolites",df_csf$"CSF_GCMS")
df_all <- df_all %>%
row_to_names(row_number = 1)
df_all <- subset(df_all, rownames(df_all)!="COS Code1")
# df_all <- subset(df_all, rownames(df_all)!="Sample ID1")
# df_all <- subset(df_all, rownames(df_all)!="Sample ID")
df_all <- subset(df_all,rowSums(is.na(df_all))!=ncol(df_all))
df_all_num <- apply(df_all, c(1,2), as.numeric)
rows_to_remove <- grep("Carn", rownames(df_all_num))
df_all_num <- df_all_num[-rows_to_remove,]
mins <- apply(df_all_num,1,min,na.rm=TRUE)
mins <- mins/2
df_all <- data.frame(na_replace(df_all_num))
df_all <- df_all+mins
colnames(df_all) <- gsub("\\."," ",colnames(df_all))
metdat <- subset(metdat, COS.Code != "CSF.18")
View(df_all)
df_all_2 <- cbind(metdat$Label,df_all)
metdat$Label
df_all
df_all_2 <- rbind(metdat$Label,df_all)
df_all_2
df_all
df_all_2 <- cbind(metdat$Label,t(df_all))
df_all_2
df_all_2 <- data.frame(cbind(metdat$Label,t(df_all)),check.names = FALSE)
View(df_all_2)
colnames(df_all_2)[1] <- "Label"
View(df_all_2)
# colnames(df_all_2) <- c("Label",rownames(df_all_2))
df_all_2 <- subset(df_all_2,Label%in%c(3,8,10,12,2))
median_iqr(subset(df_all_2, Label==1)$Kynurenine)
subset(df_all_2, Label==1)$Kynurenine
subset(df_all_2, Label==1)
df_all_2
subset(df_all_2, Label==3)$Kynurenine
median_iqr(subset(df_all_2, Label==3)$Kynurenine)
subset(df_all_2, Label==3)$Kynurenine
mean_ci(subset(df_all_2, Label==3)$Kynurenine)
gsub(12,8, df_all_2$Label)
df_all_2$Label <- gsub(12,8, df_all_2$Label)
df_all_2$Label <- gsub(2,10, df_all_2$Label)
median_iqr(subset(df_all_2, Label==3)$Kynurenine)
df_all_2
df_all_2 <- rownames_to_column(df_all_2 ,var = "ID")
df_all_2
melt(df_all_2, id.vars = c("ID","Label"))
melt(df_all_2, id.vars = c("ID","Label"))
melt(df_all_2, id.vars = c("ID","Label")) %>%
group_by(Label,variable) %>%
median_iqr(value)
df_all_2
print(colnames(df_all_2))
# List of variable names
variable_names <- c("Trigonelline", "2-Picolinic acid", "Kynurenine", "3-Hydroxyanthranilic acid", "Tryptophan",
"Anthranilic acid", "5-Hydroxyindole-3-acetic acid", "N-Acetyl-5-hydroxytryptamine", "Kynurenic acid",
"Indole-3-acetic acid", "Indole-3-propionic acid", "Cortisol", "Androstenedione", "Testosterone",
"Progesterone", "Pyruvic acid", "Lactic acid", "2-Hydroxyisobutyric acid", "Glycolic acid",
"Alanine", "2-HydroxyButyric acid", "3-hydroxybutyric acid", "2-Hydroxyisovaleric acid",
"3-Hydroxyisovaleric acid", "Valine", "Urea", "Ethanolamine", "Leucine", "Glycerol", "Isoleucine",
"Proline", "Glycine", "Glyceric acid", "Uracil", "Serine", "Threonine", "Malic acid", "d-Threitol",
"Oxoproline", "Aspartic acid", "4-Hydroxyproline", "Threonic acid", "a-ketoglutaric acid",
"Glutamic acid", "Phenylalanine", "d-Xylitol", "d-Arabitol", "Glycerol-1-phosphate", "Glutamine",
"Xylonic acid", "Ribonic acid", "Hypoxanthine", "Ornithine", "Citric acid", "4-hydroxyphenyllactic acid",
"d-Fructose", "Mannose", "Galactose", "Glucose", "d-Mannitol", "d-Sorbitol", "d-Galactitol",
"d-Gluconic acid", "Saccharic acid", "myo-Inositol", "Uric acid", "Sedoheptulose")
# Create a function to generate summary tables
generate_summary_table <- function(variable_name) {
# Create a data frame with your variable
data <- df_all_2 # Replace with your actual data
# Create a summary table
summary <- summary_table(data = data,
summary_fun = list("min" = ~min(.),
"median (iqr)" = ~qwraps2::median_iqr(.),
"max" = ~max(.),
"mean (sd)" = ~qwraps2::mean_sd(.)),
fmt_fun = list("min" = qwraps2::q_format(digits = 1),
"median (iqr)" = qwraps2::q_format(digits = 1),
"max" = qwraps2::q_format(digits = 1),
"mean (sd)" = qwraps2::q_format(digits = 1)),
groups = "variable",
add_rownames = FALSE)
# Set the caption to the variable name
caption <- paste0('"', variable_name, '"')
summary <- set_caption(summary, caption)
return(summary)
}
# Generate summary tables for each variable
summary_tables <- lapply(variable_names, generate_summary_table)
# List of variable names
variable_names <- c("Trigonelline", "2-Picolinic acid", "Kynurenine", "3-Hydroxyanthranilic acid", "Tryptophan",
"Anthranilic acid", "5-Hydroxyindole-3-acetic acid", "N-Acetyl-5-hydroxytryptamine", "Kynurenic acid",
"Indole-3-acetic acid", "Indole-3-propionic acid", "Cortisol", "Androstenedione", "Testosterone",
"Progesterone", "Pyruvic acid", "Lactic acid", "2-Hydroxyisobutyric acid", "Glycolic acid",
"Alanine", "2-HydroxyButyric acid", "3-hydroxybutyric acid", "2-Hydroxyisovaleric acid",
"3-Hydroxyisovaleric acid", "Valine", "Urea", "Ethanolamine", "Leucine", "Glycerol", "Isoleucine",
"Proline", "Glycine", "Glyceric acid", "Uracil", "Serine", "Threonine", "Malic acid", "d-Threitol",
"Oxoproline", "Aspartic acid", "4-Hydroxyproline", "Threonic acid", "a-ketoglutaric acid",
"Glutamic acid", "Phenylalanine", "d-Xylitol", "d-Arabitol", "Glycerol-1-phosphate", "Glutamine",
"Xylonic acid", "Ribonic acid", "Hypoxanthine", "Ornithine", "Citric acid", "4-hydroxyphenyllactic acid",
"d-Fructose", "Mannose", "Galactose", "Glucose", "d-Mannitol", "d-Sorbitol", "d-Galactitol",
"d-Gluconic acid", "Saccharic acid", "myo-Inositol", "Uric acid", "Sedoheptulose")
# Create a function to generate summary tables
generate_summary_table <- function(variable_name) {
# Create a data frame with your variable
data <- df_all_2 # Replace with your actual data
# Create a summary table
summary <- summary_table(data = data,
summary_fun = list("min" = ~min(.),
"median (iqr)" = ~qwraps2::median_iqr(.),
"max" = ~max(.),
"mean (sd)" = ~qwraps2::mean_sd(.)),
fmt_fun = list("min" = qwraps2::q_format(digits = 1),
"median (iqr)" = qwraps2::q_format(digits = 1),
"max" = qwraps2::q_format(digits = 1),
"mean (sd)" = qwraps2::q_format(digits = 1)),
groups = "variable",
add_rownames = FALSE)
# Set the caption to the variable name
caption <- paste0('"', variable_name, '"')
summary <- set_caption(summary, caption)
return(summary)
}
# Generate summary tables for each variable
summary_tables <- lapply(variable_names, generate_summary_table)
# List of variable names
variable_names <- c("Trigonelline", "2-Picolinic acid", "Kynurenine", "3-Hydroxyanthranilic acid", "Tryptophan",
"Anthranilic acid", "5-Hydroxyindole-3-acetic acid", "N-Acetyl-5-hydroxytryptamine", "Kynurenic acid",
"Indole-3-acetic acid", "Indole-3-propionic acid", "Cortisol", "Androstenedione", "Testosterone",
"Progesterone", "Pyruvic acid", "Lactic acid", "2-Hydroxyisobutyric acid", "Glycolic acid",
"Alanine", "2-HydroxyButyric acid", "3-hydroxybutyric acid", "2-Hydroxyisovaleric acid",
"3-Hydroxyisovaleric acid", "Valine", "Urea", "Ethanolamine", "Leucine", "Glycerol", "Isoleucine",
"Proline", "Glycine", "Glyceric acid", "Uracil", "Serine", "Threonine", "Malic acid", "d-Threitol",
"Oxoproline", "Aspartic acid", "4-Hydroxyproline", "Threonic acid", "a-ketoglutaric acid",
"Glutamic acid", "Phenylalanine", "d-Xylitol", "d-Arabitol", "Glycerol-1-phosphate", "Glutamine",
"Xylonic acid", "Ribonic acid", "Hypoxanthine", "Ornithine", "Citric acid", "4-hydroxyphenyllactic acid",
"d-Fructose", "Mannose", "Galactose", "Glucose", "d-Mannitol", "d-Sorbitol", "d-Galactitol",
"d-Gluconic acid", "Saccharic acid", "myo-Inositol", "Uric acid", "Sedoheptulose")
# Create an empty list to store summary tables
summary_tables <- list()
# Loop through variable names and generate summary tables
for (variable_name in variable_names) {
# Create a data frame with your variable
data <- data.frame(variable = rnorm(100)) # Replace with your actual data
# Create a summary table
summary <- summary_table(
data = data,
summary_fun = list(
"min" = ~min(.),
"median (iqr)" = ~qwraps2::median_iqr(.),
"max" = ~max(.),
"mean (sd)" = ~qwraps2::mean_sd(.)
),
fmt_fun = list(
"min" = qwraps2::q_format(digits = 1),
"median (iqr)" = qwraps2::q_format(digits = 1),
"max" = qwraps2::q_format(digits = 1),
"mean (sd)" = qwraps2::q_format(digits = 1)
),
groups = "variable",
add_rownames = FALSE
)
# Set the caption to the variable name
caption <- paste0('"', variable_name, '"')
summary <- set_caption(summary, caption)
# Append the summary table to the list
summary_tables[[variable_name]] <- summary
}
summary
summary_tables
# Loop through variable names and generate summary tables
for (variable_name in variable_names) {
# Create a data frame with your variable
data <- data.frame(variable = rnorm(100)) # Replace with your actual data
# Create a summary table
summ_t <- summary_table(
data = data,
summary_fun = list(
"min" = ~min(.),
"median (iqr)" = ~qwraps2::median_iqr(.),
"max" = ~max(.),
"mean (sd)" = ~qwraps2::mean_sd(.)
),
fmt_fun = list(
"min" = qwraps2::q_format(digits = 1),
"median (iqr)" = qwraps2::q_format(digits = 1),
"max" = qwraps2::q_format(digits = 1),
"mean (sd)" = qwraps2::q_format(digits = 1)
),
groups = "variable",
add_rownames = FALSE
)
# Set the caption to the variable name
caption <- paste0('"', variable_name, '"')
summ_t <- set_caption(summ_t, caption)
# Append the summary table to the list
summary_tables[[variable_name]] <- summ_t
}
variable_names
# Loop through variable names and generate summary tables
for (variable_name in variable_names) {
# Create a data frame with your variable
data <- df_all_2 # Replace with your actual data
# Create a summary table
summ_t <- summary_table(
data = data,
summary_fun = list(
"min" = ~min(.),
"median (iqr)" = ~qwraps2::median_iqr(.),
"max" = ~max(.),
"mean (sd)" = ~qwraps2::mean_sd(.)
),
fmt_fun = list(
"min" = qwraps2::q_format(digits = 1),
"median (iqr)" = qwraps2::q_format(digits = 1),
"max" = qwraps2::q_format(digits = 1),
"mean (sd)" = qwraps2::q_format(digits = 1)
),
groups = "variable",
add_rownames = FALSE
)
# Set the caption to the variable name
caption <- paste0('"', variable_name, '"')
summ_t <- set_caption(summ_t, caption)
# Append the summary table to the list
summary_tables[[variable_name]] <- summ_t
}
summ_t
write_xlsx(df_all_2, here("paper/Tables/data.xlsx"))
library(purrr)
library(readxl)
library(janitor)
library(imputeTS)
library(reshape2)
library(writexl)
library(qwraps2)
library(tidyverse)
library(here)
metdat <- read.csv(here("metadata/metdat.csv"), header=TRUE,row.names = 1,sep=";")
# metdat <- read.csv("/Users/sofiaillescas/Desktop/LAB/LCR/metabolomica/metdat.csv", header=TRUE, row.names = 1)
metdat_char <- read.csv(here("metadata/patient_characteristics.csv"),sep=";")
df_list <- map(purrr::set_names(excel_sheets(here("data_raw/P21145_Results_final.xlsx"))),
read_excel, path = here("data_raw/P21145_Results_final.xlsx"),
)
# df_list <- map(purrr::set_names(excel_sheets("/Users/sofiaillescas/Desktop/LAB/LCR/metabolomica/P21145_Results_final.xlsx")),
#   read_excel, path = "/Users/sofiaillescas/Desktop/LAB/LCR/metabolomica/P21145_Results_final.xlsx",)
df_list <- lapply(df_list,t)
df_list <- lapply(df_list,data.frame)
df_csf <- df_list[names(df_list) %in% "Plasma_GCMS" == FALSE]
df_csf <- lapply(df_csf,function(x) x[,1:41])
df_all <- rbind(df_csf$"Tryptophan & metabolites",df_csf$"CSF_GCMS")
df_all <- df_all %>%
row_to_names(row_number = 1)
df_all <- subset(df_all, rownames(df_all)!="COS Code1")
# df_all <- subset(df_all, rownames(df_all)!="Sample ID1")
# df_all <- subset(df_all, rownames(df_all)!="Sample ID")
df_all <- subset(df_all,rowSums(is.na(df_all))!=ncol(df_all))
df_all_num <- apply(df_all, c(1,2), as.numeric)
rows_to_remove <- grep("Carn", rownames(df_all_num))
df_all_num <- df_all_num[-rows_to_remove,]
mins <- apply(df_all_num,1,min,na.rm=TRUE)
mins <- mins/2
df_all <- data.frame(na_replace(df_all_num))
df_all <- df_all+mins
colnames(df_all) <- gsub("\\."," ",colnames(df_all))
metdat <- subset(metdat, COS.Code != "CSF.18")
df_all_log <- log2(df_all)
metdat <- metdat[order(metdat$ID),]
df_all_log <- df_all_log[,order(colnames(df_all_log))]
df_norm_lab <- data.frame(t(df_all_log))
df_norm_lab <- cbind(metdat$Label,df_norm_lab)
colnames(df_norm_lab)[1] <- "Label"
colnames(df_norm_lab) <- c("Label",rownames(df_all_log))
df_norm_lab <- subset(df_norm_lab,Label%in%c(3,8,10,12,2))
df_norm_lab$Label <- gsub(3,1,df_norm_lab$Label)
df_norm_lab1 <- rownames_to_column(df_norm_lab)
log_df <- melt(df_norm_lab1, id.vars = c("rowname","Label"))
log_df$Label <- as.factor(log_df$Label)
all_mets <- data.frame(colnames(df_norm_lab)[-1])
colnames(all_mets) <- "Detected metabolites"
View(df_all)
df_all_2 <- data.frame(cbind(metdat$Label,t(df_all)),check.names = FALSE)
colnames(df_all_2)[1] <- "Label"
# colnames(df_all_2) <- c("Label",rownames(df_all_2))
df_all_2 <- subset(df_all_2,Label%in%c(3,8,10,12,2))
df_all_2$Label <- gsub(12,8, df_all_2$Label)
df_all_2$Label <- gsub(2,10, df_all_2$Label)
df_all_2 <- rownames_to_column(df_all_2 ,var = "ID")
View(df_all_2)
library(qwraps2)
# For continuous variables raw
vars <- colnames(df_all_2)[-c(1,2)]
data <- df_all_2
summary_list <- list()
# Iterate over the variable names
for (l in vars) {
summary_list[[l]] <-
list("min" = as.formula(paste0("~ min(`", l, "`)")),
"median (iqr)" = as.formula(paste0("~ median_iqr(`", l, "`)")),
"max" = as.formula(paste0("~ max(`", l, "`)")),
"mean (CI)" = as.formula(paste0("~ qwraps2::frmtci(mean_ci(`", l, "`,show_level=TRUE))")),
"SD" = as.formula(paste0("~ sd(`", l, "`)")))
}
View(summary_list)
st_lst <- summary_table(dplyr::group_by(data,Label),summary_list)
View(st_lst)
cbind(rep(vars,each=5),st_lst)
st_lst <- cbind(rep(vars,each=5),st_lst)
?cbind
dcast(st_lst)
colnames(sr_lst)
colnames(st_lst)
colnames(st_lst)[1] <- "Metabolite"
rownames(st_lst)
dcast(st_lst)
?dcast
?melt
melt(st_lst)
melt(st_lst, id.vars="Metabolite")
st_lst
t(st_lst)
View(t(st_lst))
View(st_lst[,-c(3,4)])
View(rownames_to_column(st_lst[,-c(3,4)], var="Statistic"))
View(data.frame(rownames_to_column(st_lst[,-c(3,4)], var="Statistic"), check.names = FALSE))
st_lst[,-c(3,4)]
View(rownames_to_column(data.frame(st_lst[,-c(3,4)]), var="Statistic"), check.names = FALSE)
rownames_to_column(data.frame(st_lst[,-c(3,4)]), var="Statistic")
st_lst
colnames(st_lst)
colnames(st_lst)[-1]
pivoted_data <- pivot_wider(st_lst, names_from = Metabolite, values_from = colnames(st_lst)[-1])
st_lst <- summary_table(dplyr::group_by(data,Label),summary_list)
st_lst <- data.frame(cbind(rep(vars,each=5),st_lst),check.names = FALSE)
colnames(st_lst)[1] <- "Metabolite"
pivoted_data <- pivot_wider(st_lst, names_from = Metabolite, values_from = colnames(st_lst)[-1])
View(pivoted_data)
View(st_lst)
View(st_lst)
st_lst <- rownames_to_column(st_lst, var="Statistic")
pivoted_data <- pivot_wider(st_lst, names_from = Metabolite, values_from = colnames(st_lst)[-1])
View(pivoted_data)
pivoted_data <- pivot_wider(st_lst, names_from = Metabolite, values_from = colnames(st_lst)[-c(1,2)])
View(pivoted_data)
st_lst <- data.frame(cbind(rep(vars,each=5),st_lst),check.rows = FALSE)
st_lst <- summary_table(dplyr::group_by(data,Label),summary_list)
st_lst <- data.frame(cbind(rep(vars,each=5),st_lst),check.rows = FALSE)
colnames(st_lst)[1] <- "Metabolite"
st_lst <- summary_table(dplyr::group_by(data,Label),summary_list)
st_lst <- data.frame(cbind(rep(vars,each=5),st_lst))
st_lst <- matrix(cbind(rep(vars,each=5),st_lst))
st_lst <- summary_table(dplyr::group_by(data,Label),summary_list)
st_lst <- matrix(cbind(rep(vars,each=5),st_lst))
View(st_lst)
st_lst <- summary_table(dplyr::group_by(data,Label),summary_list)
as.matrix(cbind(rep(vars,each=5),st_lst))
st_lst <- as.matrix(cbind(rep(vars,each=5),st_lst))
rownames(summary_table())
rownames(st_lst)
rnms <- rownames(st_lst)
st_lst <- data.frame(cbind(rep(vars,each=5),st_lst), check.names = FALSE)
colnames(st_lst)[1] <- "Metabolite"
st_lst <- rownames_to_column(st_lst, var="Statistic")
st_lst$Statistic <- rnms
pivoted_data <- pivot_wider(st_lst, names_from = Metabolite, values_from = colnames(st_lst)[-c(1,2)])
View(pivoted_data)
vars <- colnames(df_all_2)[-c(1,2)]
data <- df_all_2
summary_list <- list()
# Iterate over the variable names
for (l in vars) {
summary_list[[l]] <-
list("min" = as.formula(paste0("~ min(`", l, "`)")),
"median (iqr)" = as.formula(paste0("~ median_iqr(`", l, "`)")),
"max" = as.formula(paste0("~ max(`", l, "`)")),
"mean (CI)" = as.formula(paste0("~ qwraps2::frmtci(mean_ci(`", l, "`,show_level=TRUE))")),
"SD" = as.formula(paste0("~ sd(`", l, "`)")))
}
st_lst <- summary_table(dplyr::group_by(data,Label),summary_list)
rnms <- rownames(st_lst)
st_lst <- data.frame(cbind(rep(vars,each=5),st_lst), check.names = FALSE)
colnames(st_lst)[1] <- "Metabolite"
st_lst <- rownames_to_column(st_lst, var="Statistic")
st_lst$Statistic <- rnms
pivoted_data <- pivot_wider(st_lst, names_from = Metabolite, values_from = colnames(st_lst)[-c(1,2)])
t(pivoted_data)
View(t(pivoted_data))
